{
  "openapi": "3.0.3",
  "info": {
    "title": "Marvin API",
    "version": "1.0.0",
    "summary": "API for Marvin. Marvin is the uberspace.de component managing anything technical related to uberspace 8.",
    "description": "# Authentication\nMarvin uses API keys for authentication. Ask a marvin admin for an API key, to get one.\n\nProvide the API key in a header like so: `Authorization: Api-Key MYAPIKEY`.",
    "contact": "hallo@uberspace.de"
  },
  "paths": {
    "/api/v1/common/events/": {
      "get": {
        "operationId": "get_events",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "common"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEventList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/common/events/{event_pk}/logs/": {
      "get": {
        "operationId": "get_event_logs",
        "parameters": [
          {
            "in": "path",
            "name": "event_pk",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "common"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedJobLogList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/common/events/{id}/": {
      "get": {
        "operationId": "get_event",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this event.",
            "required": true
          }
        ],
        "tags": [
          "common"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/maildomains/": {
      "get": {
        "operationId": "get_asteroid_maildomains",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMailDomainList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_asteroids_maildomains",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailDomainRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MailDomainRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MailDomainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailDomain"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/maildomains/{domain}/": {
      "get": {
        "operationId": "get_asteroid_maildomain",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailDomain"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_asteroid_maildomain",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/maildomains/{maildomain_domain}/users/": {
      "get": {
        "operationId": "get_asteroid_maildomains_users",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "maildomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMailUserList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_asteroids_maildomains_users",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "maildomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailUserRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MailUserRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MailUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailUser"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/maildomains/{maildomain_domain}/users/{local}/": {
      "get": {
        "operationId": "get_asteroid_maildomain_user",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "local",
            "schema": {
              "type": "string",
              "pattern": "^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "maildomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailUser"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "patch_asteroid_maildomain_user",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "local",
            "schema": {
              "type": "string",
              "pattern": "^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "maildomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedMailUserRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedMailUserRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedMailUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailUser"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_asteroid_maildomain_user",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "local",
            "schema": {
              "type": "string",
              "pattern": "^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "maildomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/sshkeys/": {
      "get": {
        "operationId": "get_asteroid_sshkeys",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSshKeyList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_asteroids_sshkeys",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SshKeyRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SshKeyRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SshKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SshKey"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/sshkeys/{id}/": {
      "get": {
        "operationId": "get_asteroid_sshkey",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this ssh key.",
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SshKey"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_asteroid_sshkey",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this ssh key.",
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webbackends/": {
      "get": {
        "operationId": "get_asteroid_webbackends",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebBackendList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webbackends/{id}/": {
      "get": {
        "operationId": "get_asteroid_webbackend",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this web backend.",
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebBackend"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webdomains/": {
      "get": {
        "operationId": "get_asteroid_webdomains",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebDomainList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_asteroids_webdomains",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebDomainRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebDomainRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebDomainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebDomain"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webdomains/{domain}/": {
      "get": {
        "operationId": "get_asteroid_webdomain",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebDomain"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_asteroid_webdomain",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webdomains/{webdomain_domain}/backends/": {
      "get": {
        "operationId": "get_asteroid_webdomains_backends",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "webdomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebBackendList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_asteroids_webdomains_backends",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "webdomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebBackendRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebBackendRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebBackendRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebBackend"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webdomains/{webdomain_domain}/backends/{path}/": {
      "get": {
        "operationId": "get_asteroid_webdomain_backend",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "path",
            "schema": {
              "type": "string",
              "pattern": "^.*$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "webdomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebBackend"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_asteroid_webdomain_backend",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "path",
            "schema": {
              "type": "string",
              "pattern": "^.*$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "webdomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webdomains/{webdomain_domain}/headers/": {
      "get": {
        "operationId": "get_asteroid_webdomains_headers",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "webdomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebHeaderList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_asteroids_webdomains_headers",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "webdomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHeaderRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebHeaderRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebHeaderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHeader"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webdomains/{webdomain_domain}/headers/{path}/": {
      "get": {
        "operationId": "get_asteroid_webdomain_header",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "path",
            "schema": {
              "type": "string",
              "pattern": "^.*$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "webdomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHeader"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_asteroid_webdomain_header",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "path",
            "schema": {
              "type": "string",
              "pattern": "^.*$"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "webdomain_domain",
            "schema": {
              "type": "string",
              "pattern": "^([^/]+\\.[^/]+|-)$"
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webheaders/": {
      "get": {
        "operationId": "get_asteroid_webheaders",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebHeaderList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{asteroid_name}/webheaders/{id}/": {
      "get": {
        "operationId": "get_asteroid_webheader",
        "parameters": [
          {
            "in": "path",
            "name": "asteroid_name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this web header.",
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHeader"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/external/asteroids/{name}/": {
      "get": {
        "operationId": "get_asteroid",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Name of a hosting account, e.g. 'isabell'."
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAsteroid"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "name": "isabell",
                      "host": "tuttle",
                      "active": true,
                      "flag_log_error_php": false,
                      "flag_log_error_apache": false,
                      "flag_log_access_nginx": false,
                      "flag_page_replace_500": true
                    },
                    "summary": "example"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "patch_asteroid",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Name of a hosting account, e.g. 'isabell'."
            },
            "required": true
          }
        ],
        "tags": [
          "external"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedExternalAsteroidRequest"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "isabell",
                    "host": "tuttle",
                    "active": true,
                    "flag_log_error_php": false,
                    "flag_log_error_apache": false,
                    "flag_log_access_nginx": false,
                    "flag_page_replace_500": true
                  },
                  "summary": "example"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedExternalAsteroidRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedExternalAsteroidRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAsteroid"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "name": "isabell",
                      "host": "tuttle",
                      "active": true,
                      "flag_log_error_php": false,
                      "flag_log_error_apache": false,
                      "flag_log_access_nginx": false,
                      "flag_page_replace_500": true
                    },
                    "summary": "example"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/asteroidclients/": {
      "post": {
        "operationId": "create_asteroidclients",
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsteroidClientRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AsteroidClientRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AsteroidClientRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsteroidClient"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/asteroids/": {
      "get": {
        "operationId": "get_asteroids",
        "parameters": [
          {
            "in": "query",
            "name": "active",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "host",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAsteroidList"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "count": 123,
                      "next": "http://api.example.org/accounts/?offset=400&limit=100",
                      "previous": "http://api.example.org/accounts/?offset=200&limit=100",
                      "results": [
                        {
                          "name": "isabell",
                          "host": "tuttle",
                          "active": true,
                          "flag_log_error_php": false,
                          "flag_log_error_apache": false,
                          "flag_log_access_nginx": false,
                          "flag_page_replace_500": true
                        }
                      ]
                    },
                    "summary": "example"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_asteroids",
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsteroidRequest"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "isabell",
                    "host": "tuttle",
                    "active": true,
                    "flag_log_error_php": false,
                    "flag_log_error_apache": false,
                    "flag_log_access_nginx": false,
                    "flag_page_replace_500": true
                  },
                  "summary": "example"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AsteroidRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AsteroidRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asteroid"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "name": "isabell",
                      "host": "tuttle",
                      "active": true,
                      "flag_log_error_php": false,
                      "flag_log_error_apache": false,
                      "flag_log_access_nginx": false,
                      "flag_page_replace_500": true
                    },
                    "summary": "example"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/asteroids/{name}/": {
      "get": {
        "operationId": "get_asteroid_2",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Name of a hosting account, e.g. 'isabell'."
            },
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asteroid"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "name": "isabell",
                      "host": "tuttle",
                      "active": true,
                      "flag_log_error_php": false,
                      "flag_log_error_apache": false,
                      "flag_log_access_nginx": false,
                      "flag_page_replace_500": true
                    },
                    "summary": "example"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "patch_asteroid_2",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Name of a hosting account, e.g. 'isabell'."
            },
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAsteroidRequest"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "isabell",
                    "host": "tuttle",
                    "active": true,
                    "flag_log_error_php": false,
                    "flag_log_error_apache": false,
                    "flag_log_access_nginx": false,
                    "flag_page_replace_500": true
                  },
                  "summary": "example"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAsteroidRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAsteroidRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asteroid"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "name": "isabell",
                      "host": "tuttle",
                      "active": true,
                      "flag_log_error_php": false,
                      "flag_log_error_apache": false,
                      "flag_log_access_nginx": false,
                      "flag_page_replace_500": true
                    },
                    "summary": "example"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_asteroid",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Name of a hosting account, e.g. 'isabell'."
            },
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/internal/clients/": {
      "get": {
        "operationId": "get_clients",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedClientList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_clients",
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ClientRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ClientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/clients/{id}/": {
      "get": {
        "operationId": "get_client",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this client.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "patch_client",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this client.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedClientRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedClientRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_client",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this client.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/internal/events/{event_pk}/logs/": {
      "get": {
        "operationId": "get_event_logs_2",
        "parameters": [
          {
            "in": "path",
            "name": "event_pk",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedJobLogList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/hosts/": {
      "get": {
        "operationId": "get_hosts",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHostList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/hosts/{name}/": {
      "get": {
        "operationId": "get_host",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Hostname of a server, e.g. 'tuttle'"
            },
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Host"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/hosts/{name}/web_summary/": {
      "get": {
        "operationId": "get_host_web_summary",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Hostname of a server, e.g. 'tuttle'"
            },
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Host"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_host_web_summary",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "description": "Hostname of a server, e.g. 'tuttle'"
            },
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/HostRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/HostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Host"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/jobs/{id}/defer/": {
      "post": {
        "operationId": "create_job_defer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this job.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/jobs/{id}/done/": {
      "post": {
        "operationId": "create_job_done",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this job.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/jobs/{id}/fail/": {
      "post": {
        "operationId": "call_job_fail",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this job.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/jobs/{id}/skip/": {
      "post": {
        "operationId": "create_job_skip",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this job.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/jobs/startnext/": {
      "post": {
        "operationId": "create_jobs_startnext",
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/JobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/maildomains/": {
      "get": {
        "operationId": "get_maildomains",
        "parameters": [
          {
            "in": "query",
            "name": "asteroid",
            "schema": {
              "type": "string"
            },
            "description": "Name of the asteroid this domain is in, e.g. 'isabell'."
          },
          {
            "in": "query",
            "name": "host",
            "schema": {
              "type": "string"
            },
            "description": "Name of the host this domain is on, e.g. 'tuttle'."
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMailDomainList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/maildomains/{domain}/": {
      "get": {
        "operationId": "get_maildomain",
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailDomain"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/mailusers/": {
      "get": {
        "operationId": "get_mailusers",
        "parameters": [
          {
            "in": "query",
            "name": "asteroid",
            "schema": {
              "type": "string"
            },
            "description": "Name of the asteroid this user is within, e.g. 'isabell'."
          },
          {
            "in": "query",
            "name": "host",
            "schema": {
              "type": "string"
            },
            "description": "Name of the host this user is on, e.g. 'tuttle'."
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMailUserList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/mailusers/{mail_address}/": {
      "get": {
        "operationId": "get_mailuser",
        "parameters": [
          {
            "in": "path",
            "name": "mail_address",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this mail user.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailUser"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/sshkeys/": {
      "get": {
        "operationId": "get_sshkeys",
        "parameters": [
          {
            "in": "query",
            "name": "asteroid",
            "schema": {
              "type": "string"
            },
            "description": "Name of the asteroid this key is allowed to access, e.g. 'isabell'."
          },
          {
            "in": "query",
            "name": "host",
            "schema": {
              "type": "string"
            },
            "description": "Name of the host this key is on, e.g. 'tuttle'."
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSshKeyList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/sshkeys/{id}/": {
      "get": {
        "operationId": "get_sshkey",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this ssh key.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SshKey"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/subscriptions/": {
      "get": {
        "operationId": "get_subscriptions",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSubscriptionList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "create_subscriptions",
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/subscriptions/{id}/": {
      "get": {
        "operationId": "get_subscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this subscription.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "patch_subscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this subscription.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSubscriptionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSubscriptionRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "delete_subscription",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "A unique integer value identifying this subscription.",
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/api/v1/internal/webbackends/": {
      "get": {
        "operationId": "get_webbackends",
        "parameters": [
          {
            "in": "query",
            "name": "asteroid",
            "schema": {
              "type": "string"
            },
            "description": "Name of the asteroid this backend is in, e.g. 'isabell'."
          },
          {
            "in": "query",
            "name": "host",
            "schema": {
              "type": "string"
            },
            "description": "Name of the host this backend is on, e.g. 'tuttle'."
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebBackendList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/webdomains/": {
      "get": {
        "operationId": "get_webdomains",
        "parameters": [
          {
            "in": "query",
            "name": "asteroid",
            "schema": {
              "type": "string"
            },
            "description": "Name of the asteroid this domain is in, e.g. 'isabell'."
          },
          {
            "in": "query",
            "name": "host",
            "schema": {
              "type": "string"
            },
            "description": "Name of the host this domain is on, e.g. 'tuttle'."
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebDomainList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/webdomains/{domain}/": {
      "get": {
        "operationId": "get_webdomain",
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "pattern": "^[^/]+\\.[^/]+$"
            },
            "required": true
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebDomain"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/internal/webheaders/": {
      "get": {
        "operationId": "get_webheaders",
        "parameters": [
          {
            "in": "query",
            "name": "asteroid",
            "schema": {
              "type": "string"
            },
            "description": "Name of the asteroid this backend is in, e.g. 'isabell'."
          },
          {
            "in": "query",
            "name": "host",
            "schema": {
              "type": "string"
            },
            "description": "Name of the host this backend is on, e.g. 'tuttle'."
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "internal"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWebHeaderList"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Asteroid": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a hosting account, e.g. 'isabell'.",
            "pattern": "^[a-z][a-z0-9]*$",
            "maxLength": 32
          },
          "host": {
            "type": "string",
            "description": "Hostname of a server, e.g. 'tuttle'"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Whether this asteroid can be used or is locked, e.g. because of missing payment."
          },
          "flag_log_error_php": {
            "type": "boolean",
            "default": true,
            "title": "Enable PHP error log"
          },
          "flag_log_error_apache": {
            "type": "boolean",
            "default": true,
            "title": "Enable Apache error log"
          },
          "flag_log_access_nginx": {
            "type": "boolean",
            "default": true,
            "title": "Enable nginx access log"
          },
          "flag_page_replace_500": {
            "type": "boolean",
            "default": true,
            "title": "Enable uberspace status 500 page"
          },
          "password_hash": {
            "type": "string",
            "pattern": "^(\\$[a-z0-9./-]+){3,}$",
            "maxLength": 128
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "host",
          "name",
          "pk",
          "updated_at"
        ]
      },
      "AsteroidClient": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "can_write": {
            "type": "boolean",
            "readOnly": true
          },
          "can_subscribe": {
            "type": "boolean",
            "readOnly": true
          },
          "asteroid": {
            "type": "string",
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "host": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "all_hosts": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "all_hosts",
          "can_subscribe",
          "can_write",
          "host",
          "name",
          "pk"
        ]
      },
      "AsteroidClientRequest": {
        "type": "object",
        "properties": {
          "asteroid": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'."
          }
        }
      },
      "AsteroidRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'.",
            "pattern": "^[a-z][a-z0-9]*$",
            "maxLength": 32
          },
          "host": {
            "type": "string",
            "minLength": 1,
            "description": "Hostname of a server, e.g. 'tuttle'"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Whether this asteroid can be used or is locked, e.g. because of missing payment."
          },
          "flag_log_error_php": {
            "type": "boolean",
            "default": true,
            "title": "Enable PHP error log"
          },
          "flag_log_error_apache": {
            "type": "boolean",
            "default": true,
            "title": "Enable Apache error log"
          },
          "flag_log_access_nginx": {
            "type": "boolean",
            "default": true,
            "title": "Enable nginx access log"
          },
          "flag_page_replace_500": {
            "type": "boolean",
            "default": true,
            "title": "Enable uberspace status 500 page"
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password_hash": {
            "type": "string",
            "pattern": "^(\\$[a-z0-9./-]+){3,}$",
            "maxLength": 128
          }
        },
        "required": [
          "host",
          "name"
        ]
      },
      "ChangeKindEnum": {
        "enum": [
          "DELETED",
          "CHANGED",
          "CREATED"
        ],
        "type": "string",
        "description": "* `DELETED` - deleted\n* `CHANGED` - changed\n* `CREATED` - created"
      },
      "Client": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "can_write": {
            "type": "boolean",
            "default": false
          },
          "can_subscribe": {
            "type": "boolean",
            "default": false
          },
          "can_create_asteroid_clients": {
            "type": "boolean",
            "default": false
          },
          "asteroid": {
            "type": "string",
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "host": {
            "type": "string",
            "description": "Hostname of a server, e.g. 'tuttle'"
          },
          "all_hosts": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "name",
          "pk"
        ]
      },
      "ClientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "can_write": {
            "type": "boolean",
            "default": false
          },
          "can_subscribe": {
            "type": "boolean",
            "default": false
          },
          "can_create_asteroid_clients": {
            "type": "boolean",
            "default": false
          },
          "asteroid": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "host": {
            "type": "string",
            "minLength": 1,
            "description": "Hostname of a server, e.g. 'tuttle'"
          },
          "all_hosts": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "name"
        ]
      },
      "DestinationEnum": {
        "enum": [
          "APACHE",
          "STATIC",
          "PORT"
        ],
        "type": "string",
        "description": "* `APACHE` - Apache\n* `STATIC` - Static\n* `PORT` - Port"
      },
      "DnsStateEnum": {
        "enum": [
          "VALID",
          "INVALID",
          "ERROR",
          "UNCHECKED"
        ],
        "type": "string",
        "description": "* `VALID` - valid\n* `INVALID` - invalid, could check, but invalid result\n* `ERROR` - error, could not check\n* `UNCHECKED` - unchecked, did not check yet"
      },
      "Event": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "content_type": {
            "type": "string"
          },
          "object_id": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "object_name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "human_identifier": {
            "type": "string",
            "readOnly": true
          },
          "change_kind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChangeKindEnum"
              }
            ],
            "readOnly": true
          },
          "state": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "change_kind",
          "content_type",
          "created_at",
          "human_identifier",
          "object_id",
          "object_name",
          "pk",
          "state"
        ]
      },
      "EventRequest": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string"
          }
        },
        "required": [
          "content_type"
        ]
      },
      "ExternalAsteroid": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "host": {
            "type": "string",
            "description": "Hostname of a server, e.g. 'tuttle'"
          },
          "active": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether this asteroid can be used or is locked, e.g. because of missing payment."
          },
          "flag_log_error_php": {
            "type": "boolean",
            "default": true,
            "title": "Enable PHP error log"
          },
          "flag_log_error_apache": {
            "type": "boolean",
            "default": true,
            "title": "Enable Apache error log"
          },
          "flag_log_access_nginx": {
            "type": "boolean",
            "default": true,
            "title": "Enable nginx access log"
          },
          "flag_page_replace_500": {
            "type": "boolean",
            "default": true,
            "title": "Enable uberspace status 500 page"
          },
          "password_hash": {
            "type": "string",
            "pattern": "^(\\$[a-z0-9./-]+){3,}$",
            "maxLength": 128
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "active",
          "created_at",
          "host",
          "name",
          "pk",
          "updated_at"
        ]
      },
      "Host": {
        "type": "object",
        "properties": {
          "fqdn": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Hostname of a server, e.g. 'tuttle'",
            "pattern": "^[a-z0-9]+$",
            "maxLength": 255
          }
        },
        "required": [
          "fqdn",
          "name"
        ]
      },
      "HostRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Hostname of a server, e.g. 'tuttle'",
            "pattern": "^[a-z0-9]+$",
            "maxLength": 255
          }
        },
        "required": [
          "name"
        ]
      },
      "Job": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateNewEnum"
              }
            ],
            "readOnly": true
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "subscription_host_name": {
            "type": "string",
            "readOnly": true
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        },
        "required": [
          "created_at",
          "event",
          "pk",
          "state",
          "subscription",
          "subscription_host_name"
        ]
      },
      "JobLog": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "job": {
            "type": "integer",
            "readOnly": true
          },
          "state_old": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateNewEnum"
              }
            ],
            "readOnly": true
          },
          "state_new": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateNewEnum"
              }
            ],
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "client_name": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "client_name",
          "created_at",
          "job",
          "message",
          "state_new",
          "state_old"
        ]
      },
      "JobRequest": {
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventRequest"
          },
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionRequest"
          }
        },
        "required": [
          "event",
          "subscription"
        ]
      },
      "KeyTypeEnum": {
        "enum": [
          "sk-ecdsa-sha2-nistp256@openssh.com",
          "ecdsa-sha2-nistp256",
          "ecdsa-sha2-nistp384",
          "ecdsa-sha2-nistp521",
          "sk-ssh-ed25519@openssh.com",
          "ssh-ed25519",
          "ssh-rsa"
        ],
        "type": "string",
        "description": "* `sk-ecdsa-sha2-nistp256@openssh.com` - sk-ecdsa-sha2-nistp256@openssh.com\n* `ecdsa-sha2-nistp256` - ecdsa-sha2-nistp256\n* `ecdsa-sha2-nistp384` - ecdsa-sha2-nistp384\n* `ecdsa-sha2-nistp521` - ecdsa-sha2-nistp521\n* `sk-ssh-ed25519@openssh.com` - sk-ssh-ed25519@openssh.com\n* `ssh-ed25519` - ssh-ed25519\n* `ssh-rsa` - ssh-rsa"
      },
      "MailDomain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "dns_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DnsStateEnum"
              }
            ],
            "readOnly": true,
            "description": "Whether this domain has valid DNS records and is ready to use.\n\n* `VALID` - valid\n* `INVALID` - invalid, could check, but invalid result\n* `ERROR` - error, could not check\n* `UNCHECKED` - unchecked, did not check yet"
          },
          "dns_last_check": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "When the DNS records were checked last."
          },
          "dns_error": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "Error encountered when checking DNS records."
          },
          "alias": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailDomainField"
              }
            ],
            "description": "The domain this domain is an alias for, e.g. 'example.com'."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "asteroid": {
            "type": "string",
            "description": "Name of a hosting account, e.g. 'isabell'."
          }
        },
        "required": [
          "asteroid",
          "created_at",
          "dns_error",
          "dns_last_check",
          "dns_state",
          "domain",
          "updated_at"
        ]
      },
      "MailDomainRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "minLength": 1
          },
          "alias": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailDomainFieldRequest"
              }
            ],
            "description": "The domain this domain is an alias for, e.g. 'example.com'."
          },
          "asteroid": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'."
          }
        },
        "required": [
          "asteroid",
          "domain"
        ]
      },
      "MailUser": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "string",
            "readOnly": true
          },
          "domain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailDomainField"
              }
            ],
            "description": "The domain this user is part of."
          },
          "asteroid": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.",
            "pattern": "^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$",
            "maxLength": 64
          },
          "password_hash": {
            "type": "string",
            "nullable": true,
            "description": "Mutually exclusive with alias. Either must be given.",
            "maxLength": 512
          },
          "alias": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailUserField"
              }
            ],
            "description": "Other user this user is an alias of, referred to by local@domain."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "asteroid",
          "created_at",
          "name",
          "pk",
          "updated_at"
        ]
      },
      "MailUserRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailDomainFieldRequest"
              }
            ],
            "description": "The domain this user is part of."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.",
            "pattern": "^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$",
            "maxLength": 64
          },
          "password_hash": {
            "type": "string",
            "nullable": true,
            "description": "Mutually exclusive with alias. Either must be given.",
            "maxLength": 512
          },
          "alias": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailUserFieldRequest"
              }
            ],
            "description": "Other user this user is an alias of, referred to by local@domain."
          }
        },
        "required": [
          "name"
        ]
      },
      "PaginatedAsteroidList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asteroid"
            }
          }
        }
      },
      "PaginatedClientList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        }
      },
      "PaginatedEventList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "PaginatedHostList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Host"
            }
          }
        }
      },
      "PaginatedJobLogList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobLog"
            }
          }
        }
      },
      "PaginatedMailDomainList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailDomain"
            }
          }
        }
      },
      "PaginatedMailUserList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailUser"
            }
          }
        }
      },
      "PaginatedSshKeyList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SshKey"
            }
          }
        }
      },
      "PaginatedSubscriptionList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          }
        }
      },
      "PaginatedWebBackendList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebBackend"
            }
          }
        }
      },
      "PaginatedWebDomainList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebDomain"
            }
          }
        }
      },
      "PaginatedWebHeaderList": {
        "type": "object",
        "required": [
          "count",
          "results"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebHeader"
            }
          }
        }
      },
      "PatchedAsteroidRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Whether this asteroid can be used or is locked, e.g. because of missing payment."
          },
          "flag_log_error_php": {
            "type": "boolean",
            "default": true,
            "title": "Enable PHP error log"
          },
          "flag_log_error_apache": {
            "type": "boolean",
            "default": true,
            "title": "Enable Apache error log"
          },
          "flag_log_access_nginx": {
            "type": "boolean",
            "default": true,
            "title": "Enable nginx access log"
          },
          "flag_page_replace_500": {
            "type": "boolean",
            "default": true,
            "title": "Enable uberspace status 500 page"
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password_hash": {
            "type": "string",
            "pattern": "^(\\$[a-z0-9./-]+){3,}$",
            "maxLength": 128
          }
        }
      },
      "PatchedClientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "can_write": {
            "type": "boolean",
            "default": false
          },
          "can_subscribe": {
            "type": "boolean",
            "default": false
          },
          "can_create_asteroid_clients": {
            "type": "boolean",
            "default": false
          },
          "asteroid": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "host": {
            "type": "string",
            "minLength": 1,
            "description": "Hostname of a server, e.g. 'tuttle'"
          },
          "all_hosts": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "PatchedExternalAsteroidRequest": {
        "type": "object",
        "properties": {
          "flag_log_error_php": {
            "type": "boolean",
            "default": true,
            "title": "Enable PHP error log"
          },
          "flag_log_error_apache": {
            "type": "boolean",
            "default": true,
            "title": "Enable Apache error log"
          },
          "flag_log_access_nginx": {
            "type": "boolean",
            "default": true,
            "title": "Enable nginx access log"
          },
          "flag_page_replace_500": {
            "type": "boolean",
            "default": true,
            "title": "Enable uberspace status 500 page"
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1
          },
          "password_hash": {
            "type": "string",
            "pattern": "^(\\$[a-z0-9./-]+){3,}$",
            "maxLength": 128
          }
        }
      },
      "PatchedMailUserRequest": {
        "type": "object",
        "properties": {
          "password_hash": {
            "type": "string",
            "nullable": true,
            "description": "Mutually exclusive with alias. Either must be given.",
            "maxLength": 512
          },
          "alias": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailUserFieldRequest"
              }
            ],
            "description": "Other user this user is an alias of, referred to by local@domain."
          }
        }
      },
      "PatchedSubscriptionRequest": {
        "type": "object",
        "properties": {
          "client": {
            "type": "integer",
            "writeOnly": true
          },
          "content_type": {
            "type": "string"
          },
          "host": {
            "type": "string",
            "minLength": 1,
            "description": "Hostname of a server, e.g. 'tuttle'"
          }
        }
      },
      "RelatedMailDomainField": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "string",
            "readOnly": true
          },
          "domain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailDomainField"
              }
            ],
            "description": "The domain this user is part of."
          },
          "asteroid": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.",
            "pattern": "^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$",
            "maxLength": 64
          },
          "password_hash": {
            "type": "string",
            "nullable": true,
            "description": "Mutually exclusive with alias. Either must be given.",
            "maxLength": 512
          },
          "alias": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailUserField"
              }
            ],
            "description": "Other user this user is an alias of, referred to by local@domain."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "asteroid",
          "created_at",
          "name",
          "pk",
          "updated_at"
        ]
      },
      "RelatedMailDomainFieldRequest": {
        "type": "string"
      },
      "RelatedMailUserField": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "string",
            "readOnly": true
          },
          "domain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailDomainField"
              }
            ],
            "description": "The domain this user is part of."
          },
          "asteroid": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.",
            "pattern": "^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$",
            "maxLength": 64
          },
          "password_hash": {
            "type": "string",
            "nullable": true,
            "description": "Mutually exclusive with alias. Either must be given.",
            "maxLength": 512
          },
          "alias": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelatedMailUserField"
              }
            ],
            "description": "Other user this user is an alias of, referred to by local@domain."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "asteroid",
          "created_at",
          "name",
          "pk",
          "updated_at"
        ]
      },
      "RelatedMailUserFieldRequest": {
        "type": "string"
      },
      "SshKey": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "key_type": {
            "$ref": "#/components/schemas/KeyTypeEnum"
          },
          "key": {
            "type": "string",
            "pattern": "[a-z0-9+/=]+",
            "maxLength": 1396
          },
          "key_comment": {
            "type": "string",
            "maxLength": 1024
          },
          "formatted_key": {
            "type": "string",
            "readOnly": true
          },
          "shortened_key": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "asteroid": {
            "type": "string",
            "description": "Name of a hosting account, e.g. 'isabell'."
          }
        },
        "required": [
          "asteroid",
          "created_at",
          "formatted_key",
          "key",
          "key_type",
          "pk",
          "shortened_key",
          "updated_at"
        ]
      },
      "SshKeyRequest": {
        "type": "object",
        "properties": {
          "key_type": {
            "$ref": "#/components/schemas/KeyTypeEnum"
          },
          "key": {
            "type": "string",
            "minLength": 1,
            "pattern": "[a-z0-9+/=]+",
            "maxLength": 1396
          },
          "key_comment": {
            "type": "string",
            "maxLength": 1024
          },
          "asteroid": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'."
          }
        },
        "required": [
          "asteroid",
          "key",
          "key_type"
        ]
      },
      "StateNewEnum": {
        "enum": [
          "PENDING",
          "RUNNING",
          "FAILED",
          "SKIPPED",
          "DONE"
        ],
        "type": "string",
        "description": "* `PENDING` - pending\n* `RUNNING` - running\n* `FAILED` - failed\n* `SKIPPED` - skipped\n* `DONE` - done"
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string"
          },
          "host": {
            "type": "string",
            "description": "Hostname of a server, e.g. 'tuttle'"
          }
        },
        "required": [
          "content_type"
        ]
      },
      "SubscriptionRequest": {
        "type": "object",
        "properties": {
          "client": {
            "type": "integer",
            "writeOnly": true
          },
          "content_type": {
            "type": "string"
          },
          "host": {
            "type": "string",
            "minLength": 1,
            "description": "Hostname of a server, e.g. 'tuttle'"
          }
        },
        "required": [
          "content_type"
        ]
      },
      "WebBackend": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "asteroid": {
            "type": "string",
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "pattern": "^/([a-zA-Z\\u00fc\\u00e4\\u00f6\\u00dc\\u00c4\\u00d6\\u00df0-9._=-]+/?)*$",
            "maxLength": 1024,
            "minLength": 1
          },
          "remove_prefix": {
            "type": "boolean",
            "default": false,
            "description": "Whether to remove the path while proxying, e.g. /ep/123 => /123."
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationEnum"
          },
          "port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1024,
            "nullable": true,
            "description": "TCP port of the upstream HTTP server."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "asteroid",
          "created_at",
          "destination",
          "domain",
          "path",
          "pk",
          "updated_at"
        ]
      },
      "WebBackendRequest": {
        "type": "object",
        "properties": {
          "asteroid": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "domain": {
            "type": "string",
            "minLength": 1,
            "nullable": true
          },
          "path": {
            "type": "string",
            "minLength": 1,
            "pattern": "^/([a-zA-Z\\u00fc\\u00e4\\u00f6\\u00dc\\u00c4\\u00d6\\u00df0-9._=-]+/?)*$",
            "maxLength": 1024
          },
          "remove_prefix": {
            "type": "boolean",
            "default": false,
            "description": "Whether to remove the path while proxying, e.g. /ep/123 => /123."
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationEnum"
          },
          "port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1024,
            "nullable": true,
            "description": "TCP port of the upstream HTTP server."
          }
        },
        "required": [
          "asteroid",
          "destination",
          "domain",
          "path"
        ]
      },
      "WebDomain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "domain_idn": {
            "type": "string",
            "readOnly": true
          },
          "asteroid": {
            "type": "string",
            "description": "Name of a hosting account, e.g. 'isabell'."
          }
        },
        "required": [
          "asteroid",
          "created_at",
          "domain",
          "domain_idn",
          "updated_at"
        ]
      },
      "WebDomainRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "minLength": 1
          },
          "asteroid": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'."
          }
        },
        "required": [
          "asteroid",
          "domain"
        ]
      },
      "WebHeader": {
        "type": "object",
        "properties": {
          "asteroid": {
            "type": "string",
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "pattern": "^/([a-zA-Z\\u00fc\\u00e4\\u00f6\\u00dc\\u00c4\\u00d6\\u00df0-9._=-]+/?)*$",
            "maxLength": 1024,
            "minLength": 1
          },
          "value": {
            "type": "string",
            "nullable": true,
            "pattern": "^[ -~]+$",
            "maxLength": 2048,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "pattern": "^([a-zA-Z0-9_]+-)*[a-zA-Z0-9_]+$",
            "maxLength": 255
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "asteroid",
          "created_at",
          "domain",
          "name",
          "path",
          "updated_at"
        ]
      },
      "WebHeaderRequest": {
        "type": "object",
        "properties": {
          "asteroid": {
            "type": "string",
            "minLength": 1,
            "description": "Name of a hosting account, e.g. 'isabell'."
          },
          "domain": {
            "type": "string",
            "minLength": 1,
            "nullable": true
          },
          "path": {
            "type": "string",
            "minLength": 1,
            "pattern": "^/([a-zA-Z\\u00fc\\u00e4\\u00f6\\u00dc\\u00c4\\u00d6\\u00df0-9._=-]+/?)*$",
            "maxLength": 1024
          },
          "value": {
            "type": "string",
            "nullable": true,
            "pattern": "^[ -~]+$",
            "maxLength": 2048,
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9_]+-)*[a-zA-Z0-9_]+$",
            "maxLength": 255
          }
        },
        "required": [
          "asteroid",
          "domain",
          "name",
          "path"
        ]
      }
    }
  }
}