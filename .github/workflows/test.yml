# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.6

  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - run: make install_golangci_lint
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: make test

  # Run acceptance tests in a matrix with Terraform CLI versions
  testacc:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: terraform-acctest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download

      # Run acceptance tests for Terraform version 1.10.*
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - env:
          TF_ACC: "1"
          UBERSPACE_HOST: ${{ secrets.UBERSPACE_HOST }}
          UBERSPACE_USER: ${{ secrets.UBERSPACE_USER }}
          UBERSPACE_PRIVATE_KEY: ${{ secrets.UBERSPACE_PRIVATE_KEY }}
        run: go test -v -cover ./internal/provider/
