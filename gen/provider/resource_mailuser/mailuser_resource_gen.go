// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_mailuser

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func MailuserResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"asteroid": schema.StringAttribute{
				Computed: true,
			},
			"asteroid_name": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"created_at": schema.StringAttribute{
				Computed: true,
			},
			"local": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Validators: []validator.String{
					stringvalidator.RegexMatches(regexp.MustCompile("^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$"), ""),
				},
			},
			"maildomain_domain": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Validators: []validator.String{
					stringvalidator.RegexMatches(regexp.MustCompile("^[^/]+\\.[^/]+$"), ""),
				},
			},
			"name": schema.StringAttribute{
				Required:            true,
				Description:         "Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.",
				MarkdownDescription: "Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.",
				Validators: []validator.String{
					stringvalidator.LengthBetween(1, 64),
					stringvalidator.RegexMatches(regexp.MustCompile("^(([!#$%&'*+\\-/=?^_`{|}~\\w])|([!#$%&'*+\\-/=?^_`{|}~\\w][!#$%&'*+\\-/=?^_`{|}~\\.\\w]{0,}[!#$%&'*+\\-/=?^_`{|}~\\w]))$"), ""),
				},
			},
			"password_hash": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Mutually exclusive with alias. Either must be given.",
				MarkdownDescription: "Mutually exclusive with alias. Either must be given.",
				Validators: []validator.String{
					stringvalidator.LengthAtMost(512),
				},
			},
			"pk": schema.StringAttribute{
				Computed: true,
			},
			"updated_at": schema.StringAttribute{
				Computed: true,
			},
		},
	}
}

type MailuserModel struct {
	Asteroid         types.String `tfsdk:"asteroid"`
	AsteroidName     types.String `tfsdk:"asteroid_name"`
	CreatedAt        types.String `tfsdk:"created_at"`
	Local            types.String `tfsdk:"local"`
	MaildomainDomain types.String `tfsdk:"maildomain_domain"`
	Name             types.String `tfsdk:"name"`
	PasswordHash     types.String `tfsdk:"password_hash"`
	Pk               types.String `tfsdk:"pk"`
	UpdatedAt        types.String `tfsdk:"updated_at"`
}
