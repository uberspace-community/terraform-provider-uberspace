// Code generated by ogen, DO NOT EDIT.

package client

import (
	"net/url"
	"time"

	"github.com/go-faster/errors"
)

type CreateAsteroidsMaildomainsApplicationJSON MailDomainRequest

func (*CreateAsteroidsMaildomainsApplicationJSON) createAsteroidsMaildomainsReq() {}

type CreateAsteroidsMaildomainsApplicationXWwwFormUrlencoded MailDomainRequest

func (*CreateAsteroidsMaildomainsApplicationXWwwFormUrlencoded) createAsteroidsMaildomainsReq() {}

type CreateAsteroidsMaildomainsUsersApplicationJSON MailUserRequest

func (*CreateAsteroidsMaildomainsUsersApplicationJSON) createAsteroidsMaildomainsUsersReq() {}

type CreateAsteroidsMaildomainsUsersApplicationXWwwFormUrlencoded MailUserRequest

func (*CreateAsteroidsMaildomainsUsersApplicationXWwwFormUrlencoded) createAsteroidsMaildomainsUsersReq() {
}

type CreateAsteroidsSshkeysApplicationJSON SshKeyRequest

func (*CreateAsteroidsSshkeysApplicationJSON) createAsteroidsSshkeysReq() {}

type CreateAsteroidsSshkeysApplicationXWwwFormUrlencoded SshKeyRequest

func (*CreateAsteroidsSshkeysApplicationXWwwFormUrlencoded) createAsteroidsSshkeysReq() {}

type CreateAsteroidsWebdomainsApplicationJSON WebDomainRequest

func (*CreateAsteroidsWebdomainsApplicationJSON) createAsteroidsWebdomainsReq() {}

type CreateAsteroidsWebdomainsApplicationXWwwFormUrlencoded WebDomainRequest

func (*CreateAsteroidsWebdomainsApplicationXWwwFormUrlencoded) createAsteroidsWebdomainsReq() {}

type CreateAsteroidsWebdomainsBackendsApplicationJSON WebBackendRequest

func (*CreateAsteroidsWebdomainsBackendsApplicationJSON) createAsteroidsWebdomainsBackendsReq() {}

type CreateAsteroidsWebdomainsBackendsApplicationXWwwFormUrlencoded WebBackendRequest

func (*CreateAsteroidsWebdomainsBackendsApplicationXWwwFormUrlencoded) createAsteroidsWebdomainsBackendsReq() {
}

type CreateAsteroidsWebdomainsHeadersApplicationJSON WebHeaderRequest

func (*CreateAsteroidsWebdomainsHeadersApplicationJSON) createAsteroidsWebdomainsHeadersReq() {}

type CreateAsteroidsWebdomainsHeadersApplicationXWwwFormUrlencoded WebHeaderRequest

func (*CreateAsteroidsWebdomainsHeadersApplicationXWwwFormUrlencoded) createAsteroidsWebdomainsHeadersReq() {
}

// DeleteAsteroidMaildomainNoContent is response for DeleteAsteroidMaildomain operation.
type DeleteAsteroidMaildomainNoContent struct{}

// DeleteAsteroidMaildomainUserNoContent is response for DeleteAsteroidMaildomainUser operation.
type DeleteAsteroidMaildomainUserNoContent struct{}

// DeleteAsteroidSshkeyNoContent is response for DeleteAsteroidSshkey operation.
type DeleteAsteroidSshkeyNoContent struct{}

// DeleteAsteroidWebdomainBackendNoContent is response for DeleteAsteroidWebdomainBackend operation.
type DeleteAsteroidWebdomainBackendNoContent struct{}

// DeleteAsteroidWebdomainHeaderNoContent is response for DeleteAsteroidWebdomainHeader operation.
type DeleteAsteroidWebdomainHeaderNoContent struct{}

// DeleteAsteroidWebdomainNoContent is response for DeleteAsteroidWebdomain operation.
type DeleteAsteroidWebdomainNoContent struct{}

// * `APACHE` - Apache
// * `STATIC` - Static
// * `PORT` - Port.
// Ref: #/components/schemas/DestinationEnum
type DestinationEnum string

const (
	DestinationEnumAPACHE DestinationEnum = "APACHE"
	DestinationEnumSTATIC DestinationEnum = "STATIC"
	DestinationEnumPORT   DestinationEnum = "PORT"
)

// AllValues returns all DestinationEnum values.
func (DestinationEnum) AllValues() []DestinationEnum {
	return []DestinationEnum{
		DestinationEnumAPACHE,
		DestinationEnumSTATIC,
		DestinationEnumPORT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DestinationEnum) MarshalText() ([]byte, error) {
	switch s {
	case DestinationEnumAPACHE:
		return []byte(s), nil
	case DestinationEnumSTATIC:
		return []byte(s), nil
	case DestinationEnumPORT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DestinationEnum) UnmarshalText(data []byte) error {
	switch DestinationEnum(data) {
	case DestinationEnumAPACHE:
		*s = DestinationEnumAPACHE
		return nil
	case DestinationEnumSTATIC:
		*s = DestinationEnumSTATIC
		return nil
	case DestinationEnumPORT:
		*s = DestinationEnumPORT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// * `VALID` - valid
// * `INVALID` - invalid, could check, but invalid result
// * `ERROR` - error, could not check
// * `UNCHECKED` - unchecked, did not check yet.
// Ref: #/components/schemas/DnsStateEnum
type DnsStateEnum string

const (
	DnsStateEnumVALID     DnsStateEnum = "VALID"
	DnsStateEnumINVALID   DnsStateEnum = "INVALID"
	DnsStateEnumERROR     DnsStateEnum = "ERROR"
	DnsStateEnumUNCHECKED DnsStateEnum = "UNCHECKED"
)

// AllValues returns all DnsStateEnum values.
func (DnsStateEnum) AllValues() []DnsStateEnum {
	return []DnsStateEnum{
		DnsStateEnumVALID,
		DnsStateEnumINVALID,
		DnsStateEnumERROR,
		DnsStateEnumUNCHECKED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DnsStateEnum) MarshalText() ([]byte, error) {
	switch s {
	case DnsStateEnumVALID:
		return []byte(s), nil
	case DnsStateEnumINVALID:
		return []byte(s), nil
	case DnsStateEnumERROR:
		return []byte(s), nil
	case DnsStateEnumUNCHECKED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DnsStateEnum) UnmarshalText(data []byte) error {
	switch DnsStateEnum(data) {
	case DnsStateEnumVALID:
		*s = DnsStateEnumVALID
		return nil
	case DnsStateEnumINVALID:
		*s = DnsStateEnumINVALID
		return nil
	case DnsStateEnumERROR:
		*s = DnsStateEnumERROR
		return nil
	case DnsStateEnumUNCHECKED:
		*s = DnsStateEnumUNCHECKED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ExternalAsteroid
type ExternalAsteroid struct {
	// Whether this asteroid can be used or is locked, e.g. because of missing payment.
	Active             bool      `json:"active"`
	CreatedAt          time.Time `json:"created_at"`
	FlagLogAccessNginx OptBool   `json:"flag_log_access_nginx"`
	FlagLogErrorApache OptBool   `json:"flag_log_error_apache"`
	FlagLogErrorPhp    OptBool   `json:"flag_log_error_php"`
	FlagPageReplace500 OptBool   `json:"flag_page_replace_500"`
	// Hostname of a server, e.g. 'tuttle'.
	Host string `json:"host"`
	// Name of a hosting account, e.g. 'isabell'.
	Name         string    `json:"name"`
	PasswordHash OptString `json:"password_hash"`
	Pk           string    `json:"pk"`
	UpdatedAt    time.Time `json:"updated_at"`
}

// GetActive returns the value of Active.
func (s *ExternalAsteroid) GetActive() bool {
	return s.Active
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ExternalAsteroid) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetFlagLogAccessNginx returns the value of FlagLogAccessNginx.
func (s *ExternalAsteroid) GetFlagLogAccessNginx() OptBool {
	return s.FlagLogAccessNginx
}

// GetFlagLogErrorApache returns the value of FlagLogErrorApache.
func (s *ExternalAsteroid) GetFlagLogErrorApache() OptBool {
	return s.FlagLogErrorApache
}

// GetFlagLogErrorPhp returns the value of FlagLogErrorPhp.
func (s *ExternalAsteroid) GetFlagLogErrorPhp() OptBool {
	return s.FlagLogErrorPhp
}

// GetFlagPageReplace500 returns the value of FlagPageReplace500.
func (s *ExternalAsteroid) GetFlagPageReplace500() OptBool {
	return s.FlagPageReplace500
}

// GetHost returns the value of Host.
func (s *ExternalAsteroid) GetHost() string {
	return s.Host
}

// GetName returns the value of Name.
func (s *ExternalAsteroid) GetName() string {
	return s.Name
}

// GetPasswordHash returns the value of PasswordHash.
func (s *ExternalAsteroid) GetPasswordHash() OptString {
	return s.PasswordHash
}

// GetPk returns the value of Pk.
func (s *ExternalAsteroid) GetPk() string {
	return s.Pk
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ExternalAsteroid) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetActive sets the value of Active.
func (s *ExternalAsteroid) SetActive(val bool) {
	s.Active = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ExternalAsteroid) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetFlagLogAccessNginx sets the value of FlagLogAccessNginx.
func (s *ExternalAsteroid) SetFlagLogAccessNginx(val OptBool) {
	s.FlagLogAccessNginx = val
}

// SetFlagLogErrorApache sets the value of FlagLogErrorApache.
func (s *ExternalAsteroid) SetFlagLogErrorApache(val OptBool) {
	s.FlagLogErrorApache = val
}

// SetFlagLogErrorPhp sets the value of FlagLogErrorPhp.
func (s *ExternalAsteroid) SetFlagLogErrorPhp(val OptBool) {
	s.FlagLogErrorPhp = val
}

// SetFlagPageReplace500 sets the value of FlagPageReplace500.
func (s *ExternalAsteroid) SetFlagPageReplace500(val OptBool) {
	s.FlagPageReplace500 = val
}

// SetHost sets the value of Host.
func (s *ExternalAsteroid) SetHost(val string) {
	s.Host = val
}

// SetName sets the value of Name.
func (s *ExternalAsteroid) SetName(val string) {
	s.Name = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *ExternalAsteroid) SetPasswordHash(val OptString) {
	s.PasswordHash = val
}

// SetPk sets the value of Pk.
func (s *ExternalAsteroid) SetPk(val string) {
	s.Pk = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ExternalAsteroid) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// * `sk-ecdsa-sha2-nistp256@openssh.com` - sk-ecdsa-sha2-nistp256@openssh.com
// * `ecdsa-sha2-nistp256` - ecdsa-sha2-nistp256
// * `ecdsa-sha2-nistp384` - ecdsa-sha2-nistp384
// * `ecdsa-sha2-nistp521` - ecdsa-sha2-nistp521
// * `sk-ssh-ed25519@openssh.com` - sk-ssh-ed25519@openssh.com
// * `ssh-ed25519` - ssh-ed25519
// * `ssh-rsa` - ssh-rsa.
// Ref: #/components/schemas/KeyTypeEnum
type KeyTypeEnum string

const (
	KeyTypeEnumSkEcdsaSha2Nistp256OpensshCom KeyTypeEnum = "sk-ecdsa-sha2-nistp256@openssh.com"
	KeyTypeEnumEcdsaSha2Nistp256             KeyTypeEnum = "ecdsa-sha2-nistp256"
	KeyTypeEnumEcdsaSha2Nistp384             KeyTypeEnum = "ecdsa-sha2-nistp384"
	KeyTypeEnumEcdsaSha2Nistp521             KeyTypeEnum = "ecdsa-sha2-nistp521"
	KeyTypeEnumSkSSHEd25519OpensshCom        KeyTypeEnum = "sk-ssh-ed25519@openssh.com"
	KeyTypeEnumSSHEd25519                    KeyTypeEnum = "ssh-ed25519"
	KeyTypeEnumSSHRsa                        KeyTypeEnum = "ssh-rsa"
)

// AllValues returns all KeyTypeEnum values.
func (KeyTypeEnum) AllValues() []KeyTypeEnum {
	return []KeyTypeEnum{
		KeyTypeEnumSkEcdsaSha2Nistp256OpensshCom,
		KeyTypeEnumEcdsaSha2Nistp256,
		KeyTypeEnumEcdsaSha2Nistp384,
		KeyTypeEnumEcdsaSha2Nistp521,
		KeyTypeEnumSkSSHEd25519OpensshCom,
		KeyTypeEnumSSHEd25519,
		KeyTypeEnumSSHRsa,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s KeyTypeEnum) MarshalText() ([]byte, error) {
	switch s {
	case KeyTypeEnumSkEcdsaSha2Nistp256OpensshCom:
		return []byte(s), nil
	case KeyTypeEnumEcdsaSha2Nistp256:
		return []byte(s), nil
	case KeyTypeEnumEcdsaSha2Nistp384:
		return []byte(s), nil
	case KeyTypeEnumEcdsaSha2Nistp521:
		return []byte(s), nil
	case KeyTypeEnumSkSSHEd25519OpensshCom:
		return []byte(s), nil
	case KeyTypeEnumSSHEd25519:
		return []byte(s), nil
	case KeyTypeEnumSSHRsa:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *KeyTypeEnum) UnmarshalText(data []byte) error {
	switch KeyTypeEnum(data) {
	case KeyTypeEnumSkEcdsaSha2Nistp256OpensshCom:
		*s = KeyTypeEnumSkEcdsaSha2Nistp256OpensshCom
		return nil
	case KeyTypeEnumEcdsaSha2Nistp256:
		*s = KeyTypeEnumEcdsaSha2Nistp256
		return nil
	case KeyTypeEnumEcdsaSha2Nistp384:
		*s = KeyTypeEnumEcdsaSha2Nistp384
		return nil
	case KeyTypeEnumEcdsaSha2Nistp521:
		*s = KeyTypeEnumEcdsaSha2Nistp521
		return nil
	case KeyTypeEnumSkSSHEd25519OpensshCom:
		*s = KeyTypeEnumSkSSHEd25519OpensshCom
		return nil
	case KeyTypeEnumSSHEd25519:
		*s = KeyTypeEnumSSHEd25519
		return nil
	case KeyTypeEnumSSHRsa:
		*s = KeyTypeEnumSSHRsa
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/MailDomain
type MailDomain struct {
	// The domain this domain is an alias for, e.g. 'example.com'.
	Alias *RelatedMailDomainField `json:"alias"`
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid  string    `json:"asteroid"`
	CreatedAt time.Time `json:"created_at"`
	// Error encountered when checking DNS records.
	DNSError NilString `json:"dns_error"`
	// When the DNS records were checked last.
	DNSLastCheck NilDateTime `json:"dns_last_check"`
	// Whether this domain has valid DNS records and is ready to use.
	// * `VALID` - valid
	// * `INVALID` - invalid, could check, but invalid result
	// * `ERROR` - error, could not check
	// * `UNCHECKED` - unchecked, did not check yet.
	DNSState  DnsStateEnum `json:"dns_state"`
	Domain    string       `json:"domain"`
	UpdatedAt time.Time    `json:"updated_at"`
}

// GetAlias returns the value of Alias.
func (s *MailDomain) GetAlias() *RelatedMailDomainField {
	return s.Alias
}

// GetAsteroid returns the value of Asteroid.
func (s *MailDomain) GetAsteroid() string {
	return s.Asteroid
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MailDomain) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDNSError returns the value of DNSError.
func (s *MailDomain) GetDNSError() NilString {
	return s.DNSError
}

// GetDNSLastCheck returns the value of DNSLastCheck.
func (s *MailDomain) GetDNSLastCheck() NilDateTime {
	return s.DNSLastCheck
}

// GetDNSState returns the value of DNSState.
func (s *MailDomain) GetDNSState() DnsStateEnum {
	return s.DNSState
}

// GetDomain returns the value of Domain.
func (s *MailDomain) GetDomain() string {
	return s.Domain
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *MailDomain) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAlias sets the value of Alias.
func (s *MailDomain) SetAlias(val *RelatedMailDomainField) {
	s.Alias = val
}

// SetAsteroid sets the value of Asteroid.
func (s *MailDomain) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MailDomain) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDNSError sets the value of DNSError.
func (s *MailDomain) SetDNSError(val NilString) {
	s.DNSError = val
}

// SetDNSLastCheck sets the value of DNSLastCheck.
func (s *MailDomain) SetDNSLastCheck(val NilDateTime) {
	s.DNSLastCheck = val
}

// SetDNSState sets the value of DNSState.
func (s *MailDomain) SetDNSState(val DnsStateEnum) {
	s.DNSState = val
}

// SetDomain sets the value of Domain.
func (s *MailDomain) SetDomain(val string) {
	s.Domain = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *MailDomain) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/MailDomainRequest
type MailDomainRequest struct {
	// The domain this domain is an alias for, e.g. 'example.com'.
	Alias OptRelatedMailDomainFieldRequest `json:"alias"`
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid string `json:"asteroid"`
	Domain   string `json:"domain"`
}

// GetAlias returns the value of Alias.
func (s *MailDomainRequest) GetAlias() OptRelatedMailDomainFieldRequest {
	return s.Alias
}

// GetAsteroid returns the value of Asteroid.
func (s *MailDomainRequest) GetAsteroid() string {
	return s.Asteroid
}

// GetDomain returns the value of Domain.
func (s *MailDomainRequest) GetDomain() string {
	return s.Domain
}

// SetAlias sets the value of Alias.
func (s *MailDomainRequest) SetAlias(val OptRelatedMailDomainFieldRequest) {
	s.Alias = val
}

// SetAsteroid sets the value of Asteroid.
func (s *MailDomainRequest) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetDomain sets the value of Domain.
func (s *MailDomainRequest) SetDomain(val string) {
	s.Domain = val
}

// Ref: #/components/schemas/MailDomainRequest
type MailDomainRequestMultipart struct {
	// The domain this domain is an alias for, e.g. 'example.com'.
	Alias OptRelatedMailDomainFieldRequest `json:"alias"`
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid string `json:"asteroid"`
	Domain   string `json:"domain"`
}

// GetAlias returns the value of Alias.
func (s *MailDomainRequestMultipart) GetAlias() OptRelatedMailDomainFieldRequest {
	return s.Alias
}

// GetAsteroid returns the value of Asteroid.
func (s *MailDomainRequestMultipart) GetAsteroid() string {
	return s.Asteroid
}

// GetDomain returns the value of Domain.
func (s *MailDomainRequestMultipart) GetDomain() string {
	return s.Domain
}

// SetAlias sets the value of Alias.
func (s *MailDomainRequestMultipart) SetAlias(val OptRelatedMailDomainFieldRequest) {
	s.Alias = val
}

// SetAsteroid sets the value of Asteroid.
func (s *MailDomainRequestMultipart) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetDomain sets the value of Domain.
func (s *MailDomainRequestMultipart) SetDomain(val string) {
	s.Domain = val
}

func (*MailDomainRequestMultipart) createAsteroidsMaildomainsReq() {}

// Ref: #/components/schemas/MailUser
type MailUser struct {
	// Other user this user is an alias of, referred to by local@domain.
	Alias     OptRelatedMailUserField `json:"alias"`
	Asteroid  string                  `json:"asteroid"`
	CreatedAt time.Time               `json:"created_at"`
	// The domain this user is part of.
	Domain *RelatedMailDomainField `json:"domain"`
	// Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.
	Name string `json:"name"`
	// Mutually exclusive with alias. Either must be given.
	PasswordHash OptNilString `json:"password_hash"`
	Pk           string       `json:"pk"`
	UpdatedAt    time.Time    `json:"updated_at"`
}

// GetAlias returns the value of Alias.
func (s *MailUser) GetAlias() OptRelatedMailUserField {
	return s.Alias
}

// GetAsteroid returns the value of Asteroid.
func (s *MailUser) GetAsteroid() string {
	return s.Asteroid
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MailUser) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDomain returns the value of Domain.
func (s *MailUser) GetDomain() *RelatedMailDomainField {
	return s.Domain
}

// GetName returns the value of Name.
func (s *MailUser) GetName() string {
	return s.Name
}

// GetPasswordHash returns the value of PasswordHash.
func (s *MailUser) GetPasswordHash() OptNilString {
	return s.PasswordHash
}

// GetPk returns the value of Pk.
func (s *MailUser) GetPk() string {
	return s.Pk
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *MailUser) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAlias sets the value of Alias.
func (s *MailUser) SetAlias(val OptRelatedMailUserField) {
	s.Alias = val
}

// SetAsteroid sets the value of Asteroid.
func (s *MailUser) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MailUser) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDomain sets the value of Domain.
func (s *MailUser) SetDomain(val *RelatedMailDomainField) {
	s.Domain = val
}

// SetName sets the value of Name.
func (s *MailUser) SetName(val string) {
	s.Name = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *MailUser) SetPasswordHash(val OptNilString) {
	s.PasswordHash = val
}

// SetPk sets the value of Pk.
func (s *MailUser) SetPk(val string) {
	s.Pk = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *MailUser) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/MailUserRequest
type MailUserRequest struct {
	// Other user this user is an alias of, referred to by local@domain.
	Alias OptRelatedMailUserFieldRequest `json:"alias"`
	// The domain this user is part of.
	Domain OptRelatedMailDomainFieldRequest `json:"domain"`
	// Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.
	Name string `json:"name"`
	// Mutually exclusive with alias. Either must be given.
	PasswordHash OptNilString `json:"password_hash"`
}

// GetAlias returns the value of Alias.
func (s *MailUserRequest) GetAlias() OptRelatedMailUserFieldRequest {
	return s.Alias
}

// GetDomain returns the value of Domain.
func (s *MailUserRequest) GetDomain() OptRelatedMailDomainFieldRequest {
	return s.Domain
}

// GetName returns the value of Name.
func (s *MailUserRequest) GetName() string {
	return s.Name
}

// GetPasswordHash returns the value of PasswordHash.
func (s *MailUserRequest) GetPasswordHash() OptNilString {
	return s.PasswordHash
}

// SetAlias sets the value of Alias.
func (s *MailUserRequest) SetAlias(val OptRelatedMailUserFieldRequest) {
	s.Alias = val
}

// SetDomain sets the value of Domain.
func (s *MailUserRequest) SetDomain(val OptRelatedMailDomainFieldRequest) {
	s.Domain = val
}

// SetName sets the value of Name.
func (s *MailUserRequest) SetName(val string) {
	s.Name = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *MailUserRequest) SetPasswordHash(val OptNilString) {
	s.PasswordHash = val
}

// Ref: #/components/schemas/MailUserRequest
type MailUserRequestMultipart struct {
	// Other user this user is an alias of, referred to by local@domain.
	Alias OptRelatedMailUserFieldRequest `json:"alias"`
	// The domain this user is part of.
	Domain OptRelatedMailDomainFieldRequest `json:"domain"`
	// Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.
	Name string `json:"name"`
	// Mutually exclusive with alias. Either must be given.
	PasswordHash OptNilString `json:"password_hash"`
}

// GetAlias returns the value of Alias.
func (s *MailUserRequestMultipart) GetAlias() OptRelatedMailUserFieldRequest {
	return s.Alias
}

// GetDomain returns the value of Domain.
func (s *MailUserRequestMultipart) GetDomain() OptRelatedMailDomainFieldRequest {
	return s.Domain
}

// GetName returns the value of Name.
func (s *MailUserRequestMultipart) GetName() string {
	return s.Name
}

// GetPasswordHash returns the value of PasswordHash.
func (s *MailUserRequestMultipart) GetPasswordHash() OptNilString {
	return s.PasswordHash
}

// SetAlias sets the value of Alias.
func (s *MailUserRequestMultipart) SetAlias(val OptRelatedMailUserFieldRequest) {
	s.Alias = val
}

// SetDomain sets the value of Domain.
func (s *MailUserRequestMultipart) SetDomain(val OptRelatedMailDomainFieldRequest) {
	s.Domain = val
}

// SetName sets the value of Name.
func (s *MailUserRequestMultipart) SetName(val string) {
	s.Name = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *MailUserRequestMultipart) SetPasswordHash(val OptNilString) {
	s.PasswordHash = val
}

func (*MailUserRequestMultipart) createAsteroidsMaildomainsUsersReq() {}

// NewNilDateTime returns new NilDateTime with value set to v.
func NewNilDateTime(v time.Time) NilDateTime {
	return NilDateTime{
		Value: v,
	}
}

// NilDateTime is nullable time.Time.
type NilDateTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilDateTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilDateTime) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilDateTime) SetToNull() {
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilURI returns new OptNilURI with value set to v.
func NewOptNilURI(v url.URL) OptNilURI {
	return OptNilURI{
		Value: v,
		Set:   true,
	}
}

// OptNilURI is optional nullable url.URL.
type OptNilURI struct {
	Value url.URL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilURI was set.
func (o OptNilURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilURI) SetTo(v url.URL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilURI) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilURI) SetToNull() {
	o.Set = true
	o.Null = true
	var v url.URL
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilURI) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRelatedMailDomainField returns new OptRelatedMailDomainField with value set to v.
func NewOptRelatedMailDomainField(v RelatedMailDomainField) OptRelatedMailDomainField {
	return OptRelatedMailDomainField{
		Value: v,
		Set:   true,
	}
}

// OptRelatedMailDomainField is optional RelatedMailDomainField.
type OptRelatedMailDomainField struct {
	Value RelatedMailDomainField
	Set   bool
}

// IsSet returns true if OptRelatedMailDomainField was set.
func (o OptRelatedMailDomainField) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRelatedMailDomainField) Reset() {
	var v RelatedMailDomainField
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRelatedMailDomainField) SetTo(v RelatedMailDomainField) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRelatedMailDomainField) Get() (v RelatedMailDomainField, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRelatedMailDomainField) Or(d RelatedMailDomainField) RelatedMailDomainField {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRelatedMailDomainFieldRequest returns new OptRelatedMailDomainFieldRequest with value set to v.
func NewOptRelatedMailDomainFieldRequest(v RelatedMailDomainFieldRequest) OptRelatedMailDomainFieldRequest {
	return OptRelatedMailDomainFieldRequest{
		Value: v,
		Set:   true,
	}
}

// OptRelatedMailDomainFieldRequest is optional RelatedMailDomainFieldRequest.
type OptRelatedMailDomainFieldRequest struct {
	Value RelatedMailDomainFieldRequest
	Set   bool
}

// IsSet returns true if OptRelatedMailDomainFieldRequest was set.
func (o OptRelatedMailDomainFieldRequest) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRelatedMailDomainFieldRequest) Reset() {
	var v RelatedMailDomainFieldRequest
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRelatedMailDomainFieldRequest) SetTo(v RelatedMailDomainFieldRequest) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRelatedMailDomainFieldRequest) Get() (v RelatedMailDomainFieldRequest, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRelatedMailDomainFieldRequest) Or(d RelatedMailDomainFieldRequest) RelatedMailDomainFieldRequest {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRelatedMailUserField returns new OptRelatedMailUserField with value set to v.
func NewOptRelatedMailUserField(v RelatedMailUserField) OptRelatedMailUserField {
	return OptRelatedMailUserField{
		Value: v,
		Set:   true,
	}
}

// OptRelatedMailUserField is optional RelatedMailUserField.
type OptRelatedMailUserField struct {
	Value RelatedMailUserField
	Set   bool
}

// IsSet returns true if OptRelatedMailUserField was set.
func (o OptRelatedMailUserField) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRelatedMailUserField) Reset() {
	var v RelatedMailUserField
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRelatedMailUserField) SetTo(v RelatedMailUserField) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRelatedMailUserField) Get() (v RelatedMailUserField, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRelatedMailUserField) Or(d RelatedMailUserField) RelatedMailUserField {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRelatedMailUserFieldRequest returns new OptRelatedMailUserFieldRequest with value set to v.
func NewOptRelatedMailUserFieldRequest(v RelatedMailUserFieldRequest) OptRelatedMailUserFieldRequest {
	return OptRelatedMailUserFieldRequest{
		Value: v,
		Set:   true,
	}
}

// OptRelatedMailUserFieldRequest is optional RelatedMailUserFieldRequest.
type OptRelatedMailUserFieldRequest struct {
	Value RelatedMailUserFieldRequest
	Set   bool
}

// IsSet returns true if OptRelatedMailUserFieldRequest was set.
func (o OptRelatedMailUserFieldRequest) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRelatedMailUserFieldRequest) Reset() {
	var v RelatedMailUserFieldRequest
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRelatedMailUserFieldRequest) SetTo(v RelatedMailUserFieldRequest) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRelatedMailUserFieldRequest) Get() (v RelatedMailUserFieldRequest, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRelatedMailUserFieldRequest) Or(d RelatedMailUserFieldRequest) RelatedMailUserFieldRequest {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PaginatedMailDomainList
type PaginatedMailDomainList struct {
	Count    int          `json:"count"`
	Next     OptNilURI    `json:"next"`
	Previous OptNilURI    `json:"previous"`
	Results  []MailDomain `json:"results"`
}

// GetCount returns the value of Count.
func (s *PaginatedMailDomainList) GetCount() int {
	return s.Count
}

// GetNext returns the value of Next.
func (s *PaginatedMailDomainList) GetNext() OptNilURI {
	return s.Next
}

// GetPrevious returns the value of Previous.
func (s *PaginatedMailDomainList) GetPrevious() OptNilURI {
	return s.Previous
}

// GetResults returns the value of Results.
func (s *PaginatedMailDomainList) GetResults() []MailDomain {
	return s.Results
}

// SetCount sets the value of Count.
func (s *PaginatedMailDomainList) SetCount(val int) {
	s.Count = val
}

// SetNext sets the value of Next.
func (s *PaginatedMailDomainList) SetNext(val OptNilURI) {
	s.Next = val
}

// SetPrevious sets the value of Previous.
func (s *PaginatedMailDomainList) SetPrevious(val OptNilURI) {
	s.Previous = val
}

// SetResults sets the value of Results.
func (s *PaginatedMailDomainList) SetResults(val []MailDomain) {
	s.Results = val
}

// Ref: #/components/schemas/PaginatedMailUserList
type PaginatedMailUserList struct {
	Count    int        `json:"count"`
	Next     OptNilURI  `json:"next"`
	Previous OptNilURI  `json:"previous"`
	Results  []MailUser `json:"results"`
}

// GetCount returns the value of Count.
func (s *PaginatedMailUserList) GetCount() int {
	return s.Count
}

// GetNext returns the value of Next.
func (s *PaginatedMailUserList) GetNext() OptNilURI {
	return s.Next
}

// GetPrevious returns the value of Previous.
func (s *PaginatedMailUserList) GetPrevious() OptNilURI {
	return s.Previous
}

// GetResults returns the value of Results.
func (s *PaginatedMailUserList) GetResults() []MailUser {
	return s.Results
}

// SetCount sets the value of Count.
func (s *PaginatedMailUserList) SetCount(val int) {
	s.Count = val
}

// SetNext sets the value of Next.
func (s *PaginatedMailUserList) SetNext(val OptNilURI) {
	s.Next = val
}

// SetPrevious sets the value of Previous.
func (s *PaginatedMailUserList) SetPrevious(val OptNilURI) {
	s.Previous = val
}

// SetResults sets the value of Results.
func (s *PaginatedMailUserList) SetResults(val []MailUser) {
	s.Results = val
}

// Ref: #/components/schemas/PaginatedSshKeyList
type PaginatedSshKeyList struct {
	Count    int       `json:"count"`
	Next     OptNilURI `json:"next"`
	Previous OptNilURI `json:"previous"`
	Results  []SshKey  `json:"results"`
}

// GetCount returns the value of Count.
func (s *PaginatedSshKeyList) GetCount() int {
	return s.Count
}

// GetNext returns the value of Next.
func (s *PaginatedSshKeyList) GetNext() OptNilURI {
	return s.Next
}

// GetPrevious returns the value of Previous.
func (s *PaginatedSshKeyList) GetPrevious() OptNilURI {
	return s.Previous
}

// GetResults returns the value of Results.
func (s *PaginatedSshKeyList) GetResults() []SshKey {
	return s.Results
}

// SetCount sets the value of Count.
func (s *PaginatedSshKeyList) SetCount(val int) {
	s.Count = val
}

// SetNext sets the value of Next.
func (s *PaginatedSshKeyList) SetNext(val OptNilURI) {
	s.Next = val
}

// SetPrevious sets the value of Previous.
func (s *PaginatedSshKeyList) SetPrevious(val OptNilURI) {
	s.Previous = val
}

// SetResults sets the value of Results.
func (s *PaginatedSshKeyList) SetResults(val []SshKey) {
	s.Results = val
}

// Ref: #/components/schemas/PaginatedWebBackendList
type PaginatedWebBackendList struct {
	Count    int          `json:"count"`
	Next     OptNilURI    `json:"next"`
	Previous OptNilURI    `json:"previous"`
	Results  []WebBackend `json:"results"`
}

// GetCount returns the value of Count.
func (s *PaginatedWebBackendList) GetCount() int {
	return s.Count
}

// GetNext returns the value of Next.
func (s *PaginatedWebBackendList) GetNext() OptNilURI {
	return s.Next
}

// GetPrevious returns the value of Previous.
func (s *PaginatedWebBackendList) GetPrevious() OptNilURI {
	return s.Previous
}

// GetResults returns the value of Results.
func (s *PaginatedWebBackendList) GetResults() []WebBackend {
	return s.Results
}

// SetCount sets the value of Count.
func (s *PaginatedWebBackendList) SetCount(val int) {
	s.Count = val
}

// SetNext sets the value of Next.
func (s *PaginatedWebBackendList) SetNext(val OptNilURI) {
	s.Next = val
}

// SetPrevious sets the value of Previous.
func (s *PaginatedWebBackendList) SetPrevious(val OptNilURI) {
	s.Previous = val
}

// SetResults sets the value of Results.
func (s *PaginatedWebBackendList) SetResults(val []WebBackend) {
	s.Results = val
}

// Ref: #/components/schemas/PaginatedWebDomainList
type PaginatedWebDomainList struct {
	Count    int         `json:"count"`
	Next     OptNilURI   `json:"next"`
	Previous OptNilURI   `json:"previous"`
	Results  []WebDomain `json:"results"`
}

// GetCount returns the value of Count.
func (s *PaginatedWebDomainList) GetCount() int {
	return s.Count
}

// GetNext returns the value of Next.
func (s *PaginatedWebDomainList) GetNext() OptNilURI {
	return s.Next
}

// GetPrevious returns the value of Previous.
func (s *PaginatedWebDomainList) GetPrevious() OptNilURI {
	return s.Previous
}

// GetResults returns the value of Results.
func (s *PaginatedWebDomainList) GetResults() []WebDomain {
	return s.Results
}

// SetCount sets the value of Count.
func (s *PaginatedWebDomainList) SetCount(val int) {
	s.Count = val
}

// SetNext sets the value of Next.
func (s *PaginatedWebDomainList) SetNext(val OptNilURI) {
	s.Next = val
}

// SetPrevious sets the value of Previous.
func (s *PaginatedWebDomainList) SetPrevious(val OptNilURI) {
	s.Previous = val
}

// SetResults sets the value of Results.
func (s *PaginatedWebDomainList) SetResults(val []WebDomain) {
	s.Results = val
}

// Ref: #/components/schemas/PaginatedWebHeaderList
type PaginatedWebHeaderList struct {
	Count    int         `json:"count"`
	Next     OptNilURI   `json:"next"`
	Previous OptNilURI   `json:"previous"`
	Results  []WebHeader `json:"results"`
}

// GetCount returns the value of Count.
func (s *PaginatedWebHeaderList) GetCount() int {
	return s.Count
}

// GetNext returns the value of Next.
func (s *PaginatedWebHeaderList) GetNext() OptNilURI {
	return s.Next
}

// GetPrevious returns the value of Previous.
func (s *PaginatedWebHeaderList) GetPrevious() OptNilURI {
	return s.Previous
}

// GetResults returns the value of Results.
func (s *PaginatedWebHeaderList) GetResults() []WebHeader {
	return s.Results
}

// SetCount sets the value of Count.
func (s *PaginatedWebHeaderList) SetCount(val int) {
	s.Count = val
}

// SetNext sets the value of Next.
func (s *PaginatedWebHeaderList) SetNext(val OptNilURI) {
	s.Next = val
}

// SetPrevious sets the value of Previous.
func (s *PaginatedWebHeaderList) SetPrevious(val OptNilURI) {
	s.Previous = val
}

// SetResults sets the value of Results.
func (s *PaginatedWebHeaderList) SetResults(val []WebHeader) {
	s.Results = val
}

type PatchAsteroidApplicationJSON PatchedExternalAsteroidRequest

func (*PatchAsteroidApplicationJSON) patchAsteroidReq() {}

type PatchAsteroidApplicationXWwwFormUrlencoded PatchedExternalAsteroidRequest

func (*PatchAsteroidApplicationXWwwFormUrlencoded) patchAsteroidReq() {}

type PatchAsteroidMaildomainUserApplicationJSON PatchedMailUserRequest

func (*PatchAsteroidMaildomainUserApplicationJSON) patchAsteroidMaildomainUserReq() {}

type PatchAsteroidMaildomainUserApplicationXWwwFormUrlencoded PatchedMailUserRequest

func (*PatchAsteroidMaildomainUserApplicationXWwwFormUrlencoded) patchAsteroidMaildomainUserReq() {}

type PatchAsteroidMaildomainUserReqEmptyBody struct{}

func (*PatchAsteroidMaildomainUserReqEmptyBody) patchAsteroidMaildomainUserReq() {}

type PatchAsteroidReqEmptyBody struct{}

func (*PatchAsteroidReqEmptyBody) patchAsteroidReq() {}

// Ref: #/components/schemas/PatchedExternalAsteroidRequest
type PatchedExternalAsteroidRequest struct {
	FlagLogAccessNginx OptBool   `json:"flag_log_access_nginx"`
	FlagLogErrorApache OptBool   `json:"flag_log_error_apache"`
	FlagLogErrorPhp    OptBool   `json:"flag_log_error_php"`
	FlagPageReplace500 OptBool   `json:"flag_page_replace_500"`
	Password           OptString `json:"password"`
	PasswordHash       OptString `json:"password_hash"`
}

// GetFlagLogAccessNginx returns the value of FlagLogAccessNginx.
func (s *PatchedExternalAsteroidRequest) GetFlagLogAccessNginx() OptBool {
	return s.FlagLogAccessNginx
}

// GetFlagLogErrorApache returns the value of FlagLogErrorApache.
func (s *PatchedExternalAsteroidRequest) GetFlagLogErrorApache() OptBool {
	return s.FlagLogErrorApache
}

// GetFlagLogErrorPhp returns the value of FlagLogErrorPhp.
func (s *PatchedExternalAsteroidRequest) GetFlagLogErrorPhp() OptBool {
	return s.FlagLogErrorPhp
}

// GetFlagPageReplace500 returns the value of FlagPageReplace500.
func (s *PatchedExternalAsteroidRequest) GetFlagPageReplace500() OptBool {
	return s.FlagPageReplace500
}

// GetPassword returns the value of Password.
func (s *PatchedExternalAsteroidRequest) GetPassword() OptString {
	return s.Password
}

// GetPasswordHash returns the value of PasswordHash.
func (s *PatchedExternalAsteroidRequest) GetPasswordHash() OptString {
	return s.PasswordHash
}

// SetFlagLogAccessNginx sets the value of FlagLogAccessNginx.
func (s *PatchedExternalAsteroidRequest) SetFlagLogAccessNginx(val OptBool) {
	s.FlagLogAccessNginx = val
}

// SetFlagLogErrorApache sets the value of FlagLogErrorApache.
func (s *PatchedExternalAsteroidRequest) SetFlagLogErrorApache(val OptBool) {
	s.FlagLogErrorApache = val
}

// SetFlagLogErrorPhp sets the value of FlagLogErrorPhp.
func (s *PatchedExternalAsteroidRequest) SetFlagLogErrorPhp(val OptBool) {
	s.FlagLogErrorPhp = val
}

// SetFlagPageReplace500 sets the value of FlagPageReplace500.
func (s *PatchedExternalAsteroidRequest) SetFlagPageReplace500(val OptBool) {
	s.FlagPageReplace500 = val
}

// SetPassword sets the value of Password.
func (s *PatchedExternalAsteroidRequest) SetPassword(val OptString) {
	s.Password = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *PatchedExternalAsteroidRequest) SetPasswordHash(val OptString) {
	s.PasswordHash = val
}

// Ref: #/components/schemas/PatchedExternalAsteroidRequest
type PatchedExternalAsteroidRequestMultipart struct {
	FlagLogAccessNginx OptBool   `json:"flag_log_access_nginx"`
	FlagLogErrorApache OptBool   `json:"flag_log_error_apache"`
	FlagLogErrorPhp    OptBool   `json:"flag_log_error_php"`
	FlagPageReplace500 OptBool   `json:"flag_page_replace_500"`
	Password           OptString `json:"password"`
	PasswordHash       OptString `json:"password_hash"`
}

// GetFlagLogAccessNginx returns the value of FlagLogAccessNginx.
func (s *PatchedExternalAsteroidRequestMultipart) GetFlagLogAccessNginx() OptBool {
	return s.FlagLogAccessNginx
}

// GetFlagLogErrorApache returns the value of FlagLogErrorApache.
func (s *PatchedExternalAsteroidRequestMultipart) GetFlagLogErrorApache() OptBool {
	return s.FlagLogErrorApache
}

// GetFlagLogErrorPhp returns the value of FlagLogErrorPhp.
func (s *PatchedExternalAsteroidRequestMultipart) GetFlagLogErrorPhp() OptBool {
	return s.FlagLogErrorPhp
}

// GetFlagPageReplace500 returns the value of FlagPageReplace500.
func (s *PatchedExternalAsteroidRequestMultipart) GetFlagPageReplace500() OptBool {
	return s.FlagPageReplace500
}

// GetPassword returns the value of Password.
func (s *PatchedExternalAsteroidRequestMultipart) GetPassword() OptString {
	return s.Password
}

// GetPasswordHash returns the value of PasswordHash.
func (s *PatchedExternalAsteroidRequestMultipart) GetPasswordHash() OptString {
	return s.PasswordHash
}

// SetFlagLogAccessNginx sets the value of FlagLogAccessNginx.
func (s *PatchedExternalAsteroidRequestMultipart) SetFlagLogAccessNginx(val OptBool) {
	s.FlagLogAccessNginx = val
}

// SetFlagLogErrorApache sets the value of FlagLogErrorApache.
func (s *PatchedExternalAsteroidRequestMultipart) SetFlagLogErrorApache(val OptBool) {
	s.FlagLogErrorApache = val
}

// SetFlagLogErrorPhp sets the value of FlagLogErrorPhp.
func (s *PatchedExternalAsteroidRequestMultipart) SetFlagLogErrorPhp(val OptBool) {
	s.FlagLogErrorPhp = val
}

// SetFlagPageReplace500 sets the value of FlagPageReplace500.
func (s *PatchedExternalAsteroidRequestMultipart) SetFlagPageReplace500(val OptBool) {
	s.FlagPageReplace500 = val
}

// SetPassword sets the value of Password.
func (s *PatchedExternalAsteroidRequestMultipart) SetPassword(val OptString) {
	s.Password = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *PatchedExternalAsteroidRequestMultipart) SetPasswordHash(val OptString) {
	s.PasswordHash = val
}

func (*PatchedExternalAsteroidRequestMultipart) patchAsteroidReq() {}

// Ref: #/components/schemas/PatchedMailUserRequest
type PatchedMailUserRequest struct {
	// Other user this user is an alias of, referred to by local@domain.
	Alias OptRelatedMailUserFieldRequest `json:"alias"`
	// Mutually exclusive with alias. Either must be given.
	PasswordHash OptNilString `json:"password_hash"`
}

// GetAlias returns the value of Alias.
func (s *PatchedMailUserRequest) GetAlias() OptRelatedMailUserFieldRequest {
	return s.Alias
}

// GetPasswordHash returns the value of PasswordHash.
func (s *PatchedMailUserRequest) GetPasswordHash() OptNilString {
	return s.PasswordHash
}

// SetAlias sets the value of Alias.
func (s *PatchedMailUserRequest) SetAlias(val OptRelatedMailUserFieldRequest) {
	s.Alias = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *PatchedMailUserRequest) SetPasswordHash(val OptNilString) {
	s.PasswordHash = val
}

// Ref: #/components/schemas/PatchedMailUserRequest
type PatchedMailUserRequestMultipart struct {
	// Other user this user is an alias of, referred to by local@domain.
	Alias OptRelatedMailUserFieldRequest `json:"alias"`
	// Mutually exclusive with alias. Either must be given.
	PasswordHash OptNilString `json:"password_hash"`
}

// GetAlias returns the value of Alias.
func (s *PatchedMailUserRequestMultipart) GetAlias() OptRelatedMailUserFieldRequest {
	return s.Alias
}

// GetPasswordHash returns the value of PasswordHash.
func (s *PatchedMailUserRequestMultipart) GetPasswordHash() OptNilString {
	return s.PasswordHash
}

// SetAlias sets the value of Alias.
func (s *PatchedMailUserRequestMultipart) SetAlias(val OptRelatedMailUserFieldRequest) {
	s.Alias = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *PatchedMailUserRequestMultipart) SetPasswordHash(val OptNilString) {
	s.PasswordHash = val
}

func (*PatchedMailUserRequestMultipart) patchAsteroidMaildomainUserReq() {}

// Ref: #/components/schemas/RelatedMailDomainField
type RelatedMailDomainField struct {
	// Other user this user is an alias of, referred to by local@domain.
	Alias     OptRelatedMailUserField `json:"alias"`
	Asteroid  string                  `json:"asteroid"`
	CreatedAt time.Time               `json:"created_at"`
	// The domain this user is part of.
	Domain *RelatedMailDomainField `json:"domain"`
	// Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.
	Name string `json:"name"`
	// Mutually exclusive with alias. Either must be given.
	PasswordHash OptNilString `json:"password_hash"`
	Pk           string       `json:"pk"`
	UpdatedAt    time.Time    `json:"updated_at"`
}

// GetAlias returns the value of Alias.
func (s *RelatedMailDomainField) GetAlias() OptRelatedMailUserField {
	return s.Alias
}

// GetAsteroid returns the value of Asteroid.
func (s *RelatedMailDomainField) GetAsteroid() string {
	return s.Asteroid
}

// GetCreatedAt returns the value of CreatedAt.
func (s *RelatedMailDomainField) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDomain returns the value of Domain.
func (s *RelatedMailDomainField) GetDomain() *RelatedMailDomainField {
	return s.Domain
}

// GetName returns the value of Name.
func (s *RelatedMailDomainField) GetName() string {
	return s.Name
}

// GetPasswordHash returns the value of PasswordHash.
func (s *RelatedMailDomainField) GetPasswordHash() OptNilString {
	return s.PasswordHash
}

// GetPk returns the value of Pk.
func (s *RelatedMailDomainField) GetPk() string {
	return s.Pk
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *RelatedMailDomainField) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAlias sets the value of Alias.
func (s *RelatedMailDomainField) SetAlias(val OptRelatedMailUserField) {
	s.Alias = val
}

// SetAsteroid sets the value of Asteroid.
func (s *RelatedMailDomainField) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *RelatedMailDomainField) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDomain sets the value of Domain.
func (s *RelatedMailDomainField) SetDomain(val *RelatedMailDomainField) {
	s.Domain = val
}

// SetName sets the value of Name.
func (s *RelatedMailDomainField) SetName(val string) {
	s.Name = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *RelatedMailDomainField) SetPasswordHash(val OptNilString) {
	s.PasswordHash = val
}

// SetPk sets the value of Pk.
func (s *RelatedMailDomainField) SetPk(val string) {
	s.Pk = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *RelatedMailDomainField) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type RelatedMailDomainFieldRequest string

// Ref: #/components/schemas/RelatedMailUserField
type RelatedMailUserField struct {
	// Other user this user is an alias of, referred to by local@domain.
	Alias     *RelatedMailUserField `json:"alias"`
	Asteroid  string                `json:"asteroid"`
	CreatedAt time.Time             `json:"created_at"`
	// The domain this user is part of.
	Domain *RelatedMailDomainField `json:"domain"`
	// Local part of the mail address, e.g. 'isabell' for 'isabell@example.org'.
	Name string `json:"name"`
	// Mutually exclusive with alias. Either must be given.
	PasswordHash OptNilString `json:"password_hash"`
	Pk           string       `json:"pk"`
	UpdatedAt    time.Time    `json:"updated_at"`
}

// GetAlias returns the value of Alias.
func (s *RelatedMailUserField) GetAlias() *RelatedMailUserField {
	return s.Alias
}

// GetAsteroid returns the value of Asteroid.
func (s *RelatedMailUserField) GetAsteroid() string {
	return s.Asteroid
}

// GetCreatedAt returns the value of CreatedAt.
func (s *RelatedMailUserField) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDomain returns the value of Domain.
func (s *RelatedMailUserField) GetDomain() *RelatedMailDomainField {
	return s.Domain
}

// GetName returns the value of Name.
func (s *RelatedMailUserField) GetName() string {
	return s.Name
}

// GetPasswordHash returns the value of PasswordHash.
func (s *RelatedMailUserField) GetPasswordHash() OptNilString {
	return s.PasswordHash
}

// GetPk returns the value of Pk.
func (s *RelatedMailUserField) GetPk() string {
	return s.Pk
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *RelatedMailUserField) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAlias sets the value of Alias.
func (s *RelatedMailUserField) SetAlias(val *RelatedMailUserField) {
	s.Alias = val
}

// SetAsteroid sets the value of Asteroid.
func (s *RelatedMailUserField) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *RelatedMailUserField) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDomain sets the value of Domain.
func (s *RelatedMailUserField) SetDomain(val *RelatedMailDomainField) {
	s.Domain = val
}

// SetName sets the value of Name.
func (s *RelatedMailUserField) SetName(val string) {
	s.Name = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *RelatedMailUserField) SetPasswordHash(val OptNilString) {
	s.PasswordHash = val
}

// SetPk sets the value of Pk.
func (s *RelatedMailUserField) SetPk(val string) {
	s.Pk = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *RelatedMailUserField) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type RelatedMailUserFieldRequest string

// Ref: #/components/schemas/SshKey
type SshKey struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid     string      `json:"asteroid"`
	CreatedAt    time.Time   `json:"created_at"`
	FormattedKey string      `json:"formatted_key"`
	Key          string      `json:"key"`
	KeyComment   OptString   `json:"key_comment"`
	KeyType      KeyTypeEnum `json:"key_type"`
	Pk           int         `json:"pk"`
	ShortenedKey string      `json:"shortened_key"`
	UpdatedAt    time.Time   `json:"updated_at"`
}

// GetAsteroid returns the value of Asteroid.
func (s *SshKey) GetAsteroid() string {
	return s.Asteroid
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SshKey) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetFormattedKey returns the value of FormattedKey.
func (s *SshKey) GetFormattedKey() string {
	return s.FormattedKey
}

// GetKey returns the value of Key.
func (s *SshKey) GetKey() string {
	return s.Key
}

// GetKeyComment returns the value of KeyComment.
func (s *SshKey) GetKeyComment() OptString {
	return s.KeyComment
}

// GetKeyType returns the value of KeyType.
func (s *SshKey) GetKeyType() KeyTypeEnum {
	return s.KeyType
}

// GetPk returns the value of Pk.
func (s *SshKey) GetPk() int {
	return s.Pk
}

// GetShortenedKey returns the value of ShortenedKey.
func (s *SshKey) GetShortenedKey() string {
	return s.ShortenedKey
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SshKey) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAsteroid sets the value of Asteroid.
func (s *SshKey) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SshKey) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetFormattedKey sets the value of FormattedKey.
func (s *SshKey) SetFormattedKey(val string) {
	s.FormattedKey = val
}

// SetKey sets the value of Key.
func (s *SshKey) SetKey(val string) {
	s.Key = val
}

// SetKeyComment sets the value of KeyComment.
func (s *SshKey) SetKeyComment(val OptString) {
	s.KeyComment = val
}

// SetKeyType sets the value of KeyType.
func (s *SshKey) SetKeyType(val KeyTypeEnum) {
	s.KeyType = val
}

// SetPk sets the value of Pk.
func (s *SshKey) SetPk(val int) {
	s.Pk = val
}

// SetShortenedKey sets the value of ShortenedKey.
func (s *SshKey) SetShortenedKey(val string) {
	s.ShortenedKey = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SshKey) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/SshKeyRequest
type SshKeyRequest struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid   string      `json:"asteroid"`
	Key        string      `json:"key"`
	KeyComment OptString   `json:"key_comment"`
	KeyType    KeyTypeEnum `json:"key_type"`
}

// GetAsteroid returns the value of Asteroid.
func (s *SshKeyRequest) GetAsteroid() string {
	return s.Asteroid
}

// GetKey returns the value of Key.
func (s *SshKeyRequest) GetKey() string {
	return s.Key
}

// GetKeyComment returns the value of KeyComment.
func (s *SshKeyRequest) GetKeyComment() OptString {
	return s.KeyComment
}

// GetKeyType returns the value of KeyType.
func (s *SshKeyRequest) GetKeyType() KeyTypeEnum {
	return s.KeyType
}

// SetAsteroid sets the value of Asteroid.
func (s *SshKeyRequest) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetKey sets the value of Key.
func (s *SshKeyRequest) SetKey(val string) {
	s.Key = val
}

// SetKeyComment sets the value of KeyComment.
func (s *SshKeyRequest) SetKeyComment(val OptString) {
	s.KeyComment = val
}

// SetKeyType sets the value of KeyType.
func (s *SshKeyRequest) SetKeyType(val KeyTypeEnum) {
	s.KeyType = val
}

// Ref: #/components/schemas/SshKeyRequest
type SshKeyRequestMultipart struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid   string      `json:"asteroid"`
	Key        string      `json:"key"`
	KeyComment OptString   `json:"key_comment"`
	KeyType    KeyTypeEnum `json:"key_type"`
}

// GetAsteroid returns the value of Asteroid.
func (s *SshKeyRequestMultipart) GetAsteroid() string {
	return s.Asteroid
}

// GetKey returns the value of Key.
func (s *SshKeyRequestMultipart) GetKey() string {
	return s.Key
}

// GetKeyComment returns the value of KeyComment.
func (s *SshKeyRequestMultipart) GetKeyComment() OptString {
	return s.KeyComment
}

// GetKeyType returns the value of KeyType.
func (s *SshKeyRequestMultipart) GetKeyType() KeyTypeEnum {
	return s.KeyType
}

// SetAsteroid sets the value of Asteroid.
func (s *SshKeyRequestMultipart) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetKey sets the value of Key.
func (s *SshKeyRequestMultipart) SetKey(val string) {
	s.Key = val
}

// SetKeyComment sets the value of KeyComment.
func (s *SshKeyRequestMultipart) SetKeyComment(val OptString) {
	s.KeyComment = val
}

// SetKeyType sets the value of KeyType.
func (s *SshKeyRequestMultipart) SetKeyType(val KeyTypeEnum) {
	s.KeyType = val
}

func (*SshKeyRequestMultipart) createAsteroidsSshkeysReq() {}

// Ref: #/components/schemas/WebBackend
type WebBackend struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid    string          `json:"asteroid"`
	CreatedAt   time.Time       `json:"created_at"`
	Destination DestinationEnum `json:"destination"`
	Domain      NilString       `json:"domain"`
	Path        string          `json:"path"`
	Pk          int             `json:"pk"`
	// TCP port of the upstream HTTP server.
	Port OptNilInt `json:"port"`
	// Whether to remove the path while proxying, e.g. /ep/123 => /123.
	RemovePrefix OptBool   `json:"remove_prefix"`
	UpdatedAt    time.Time `json:"updated_at"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebBackend) GetAsteroid() string {
	return s.Asteroid
}

// GetCreatedAt returns the value of CreatedAt.
func (s *WebBackend) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDestination returns the value of Destination.
func (s *WebBackend) GetDestination() DestinationEnum {
	return s.Destination
}

// GetDomain returns the value of Domain.
func (s *WebBackend) GetDomain() NilString {
	return s.Domain
}

// GetPath returns the value of Path.
func (s *WebBackend) GetPath() string {
	return s.Path
}

// GetPk returns the value of Pk.
func (s *WebBackend) GetPk() int {
	return s.Pk
}

// GetPort returns the value of Port.
func (s *WebBackend) GetPort() OptNilInt {
	return s.Port
}

// GetRemovePrefix returns the value of RemovePrefix.
func (s *WebBackend) GetRemovePrefix() OptBool {
	return s.RemovePrefix
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *WebBackend) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAsteroid sets the value of Asteroid.
func (s *WebBackend) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *WebBackend) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDestination sets the value of Destination.
func (s *WebBackend) SetDestination(val DestinationEnum) {
	s.Destination = val
}

// SetDomain sets the value of Domain.
func (s *WebBackend) SetDomain(val NilString) {
	s.Domain = val
}

// SetPath sets the value of Path.
func (s *WebBackend) SetPath(val string) {
	s.Path = val
}

// SetPk sets the value of Pk.
func (s *WebBackend) SetPk(val int) {
	s.Pk = val
}

// SetPort sets the value of Port.
func (s *WebBackend) SetPort(val OptNilInt) {
	s.Port = val
}

// SetRemovePrefix sets the value of RemovePrefix.
func (s *WebBackend) SetRemovePrefix(val OptBool) {
	s.RemovePrefix = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *WebBackend) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/WebBackendRequest
type WebBackendRequest struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid    string          `json:"asteroid"`
	Destination DestinationEnum `json:"destination"`
	Domain      NilString       `json:"domain"`
	Path        string          `json:"path"`
	// TCP port of the upstream HTTP server.
	Port OptNilInt `json:"port"`
	// Whether to remove the path while proxying, e.g. /ep/123 => /123.
	RemovePrefix OptBool `json:"remove_prefix"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebBackendRequest) GetAsteroid() string {
	return s.Asteroid
}

// GetDestination returns the value of Destination.
func (s *WebBackendRequest) GetDestination() DestinationEnum {
	return s.Destination
}

// GetDomain returns the value of Domain.
func (s *WebBackendRequest) GetDomain() NilString {
	return s.Domain
}

// GetPath returns the value of Path.
func (s *WebBackendRequest) GetPath() string {
	return s.Path
}

// GetPort returns the value of Port.
func (s *WebBackendRequest) GetPort() OptNilInt {
	return s.Port
}

// GetRemovePrefix returns the value of RemovePrefix.
func (s *WebBackendRequest) GetRemovePrefix() OptBool {
	return s.RemovePrefix
}

// SetAsteroid sets the value of Asteroid.
func (s *WebBackendRequest) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetDestination sets the value of Destination.
func (s *WebBackendRequest) SetDestination(val DestinationEnum) {
	s.Destination = val
}

// SetDomain sets the value of Domain.
func (s *WebBackendRequest) SetDomain(val NilString) {
	s.Domain = val
}

// SetPath sets the value of Path.
func (s *WebBackendRequest) SetPath(val string) {
	s.Path = val
}

// SetPort sets the value of Port.
func (s *WebBackendRequest) SetPort(val OptNilInt) {
	s.Port = val
}

// SetRemovePrefix sets the value of RemovePrefix.
func (s *WebBackendRequest) SetRemovePrefix(val OptBool) {
	s.RemovePrefix = val
}

// Ref: #/components/schemas/WebBackendRequest
type WebBackendRequestMultipart struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid    string          `json:"asteroid"`
	Destination DestinationEnum `json:"destination"`
	Domain      NilString       `json:"domain"`
	Path        string          `json:"path"`
	// TCP port of the upstream HTTP server.
	Port OptNilInt `json:"port"`
	// Whether to remove the path while proxying, e.g. /ep/123 => /123.
	RemovePrefix OptBool `json:"remove_prefix"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebBackendRequestMultipart) GetAsteroid() string {
	return s.Asteroid
}

// GetDestination returns the value of Destination.
func (s *WebBackendRequestMultipart) GetDestination() DestinationEnum {
	return s.Destination
}

// GetDomain returns the value of Domain.
func (s *WebBackendRequestMultipart) GetDomain() NilString {
	return s.Domain
}

// GetPath returns the value of Path.
func (s *WebBackendRequestMultipart) GetPath() string {
	return s.Path
}

// GetPort returns the value of Port.
func (s *WebBackendRequestMultipart) GetPort() OptNilInt {
	return s.Port
}

// GetRemovePrefix returns the value of RemovePrefix.
func (s *WebBackendRequestMultipart) GetRemovePrefix() OptBool {
	return s.RemovePrefix
}

// SetAsteroid sets the value of Asteroid.
func (s *WebBackendRequestMultipart) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetDestination sets the value of Destination.
func (s *WebBackendRequestMultipart) SetDestination(val DestinationEnum) {
	s.Destination = val
}

// SetDomain sets the value of Domain.
func (s *WebBackendRequestMultipart) SetDomain(val NilString) {
	s.Domain = val
}

// SetPath sets the value of Path.
func (s *WebBackendRequestMultipart) SetPath(val string) {
	s.Path = val
}

// SetPort sets the value of Port.
func (s *WebBackendRequestMultipart) SetPort(val OptNilInt) {
	s.Port = val
}

// SetRemovePrefix sets the value of RemovePrefix.
func (s *WebBackendRequestMultipart) SetRemovePrefix(val OptBool) {
	s.RemovePrefix = val
}

func (*WebBackendRequestMultipart) createAsteroidsWebdomainsBackendsReq() {}

// Ref: #/components/schemas/WebDomain
type WebDomain struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid  string    `json:"asteroid"`
	CreatedAt time.Time `json:"created_at"`
	Domain    string    `json:"domain"`
	DomainIdn string    `json:"domain_idn"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebDomain) GetAsteroid() string {
	return s.Asteroid
}

// GetCreatedAt returns the value of CreatedAt.
func (s *WebDomain) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDomain returns the value of Domain.
func (s *WebDomain) GetDomain() string {
	return s.Domain
}

// GetDomainIdn returns the value of DomainIdn.
func (s *WebDomain) GetDomainIdn() string {
	return s.DomainIdn
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *WebDomain) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAsteroid sets the value of Asteroid.
func (s *WebDomain) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *WebDomain) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDomain sets the value of Domain.
func (s *WebDomain) SetDomain(val string) {
	s.Domain = val
}

// SetDomainIdn sets the value of DomainIdn.
func (s *WebDomain) SetDomainIdn(val string) {
	s.DomainIdn = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *WebDomain) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/WebDomainRequest
type WebDomainRequest struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid string `json:"asteroid"`
	Domain   string `json:"domain"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebDomainRequest) GetAsteroid() string {
	return s.Asteroid
}

// GetDomain returns the value of Domain.
func (s *WebDomainRequest) GetDomain() string {
	return s.Domain
}

// SetAsteroid sets the value of Asteroid.
func (s *WebDomainRequest) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetDomain sets the value of Domain.
func (s *WebDomainRequest) SetDomain(val string) {
	s.Domain = val
}

// Ref: #/components/schemas/WebDomainRequest
type WebDomainRequestMultipart struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid string `json:"asteroid"`
	Domain   string `json:"domain"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebDomainRequestMultipart) GetAsteroid() string {
	return s.Asteroid
}

// GetDomain returns the value of Domain.
func (s *WebDomainRequestMultipart) GetDomain() string {
	return s.Domain
}

// SetAsteroid sets the value of Asteroid.
func (s *WebDomainRequestMultipart) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetDomain sets the value of Domain.
func (s *WebDomainRequestMultipart) SetDomain(val string) {
	s.Domain = val
}

func (*WebDomainRequestMultipart) createAsteroidsWebdomainsReq() {}

// Ref: #/components/schemas/WebHeader
type WebHeader struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid  string       `json:"asteroid"`
	CreatedAt time.Time    `json:"created_at"`
	Domain    NilString    `json:"domain"`
	Name      string       `json:"name"`
	Path      string       `json:"path"`
	UpdatedAt time.Time    `json:"updated_at"`
	Value     OptNilString `json:"value"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebHeader) GetAsteroid() string {
	return s.Asteroid
}

// GetCreatedAt returns the value of CreatedAt.
func (s *WebHeader) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDomain returns the value of Domain.
func (s *WebHeader) GetDomain() NilString {
	return s.Domain
}

// GetName returns the value of Name.
func (s *WebHeader) GetName() string {
	return s.Name
}

// GetPath returns the value of Path.
func (s *WebHeader) GetPath() string {
	return s.Path
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *WebHeader) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetValue returns the value of Value.
func (s *WebHeader) GetValue() OptNilString {
	return s.Value
}

// SetAsteroid sets the value of Asteroid.
func (s *WebHeader) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *WebHeader) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDomain sets the value of Domain.
func (s *WebHeader) SetDomain(val NilString) {
	s.Domain = val
}

// SetName sets the value of Name.
func (s *WebHeader) SetName(val string) {
	s.Name = val
}

// SetPath sets the value of Path.
func (s *WebHeader) SetPath(val string) {
	s.Path = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *WebHeader) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetValue sets the value of Value.
func (s *WebHeader) SetValue(val OptNilString) {
	s.Value = val
}

// Ref: #/components/schemas/WebHeaderRequest
type WebHeaderRequest struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid string       `json:"asteroid"`
	Domain   NilString    `json:"domain"`
	Name     string       `json:"name"`
	Path     string       `json:"path"`
	Value    OptNilString `json:"value"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebHeaderRequest) GetAsteroid() string {
	return s.Asteroid
}

// GetDomain returns the value of Domain.
func (s *WebHeaderRequest) GetDomain() NilString {
	return s.Domain
}

// GetName returns the value of Name.
func (s *WebHeaderRequest) GetName() string {
	return s.Name
}

// GetPath returns the value of Path.
func (s *WebHeaderRequest) GetPath() string {
	return s.Path
}

// GetValue returns the value of Value.
func (s *WebHeaderRequest) GetValue() OptNilString {
	return s.Value
}

// SetAsteroid sets the value of Asteroid.
func (s *WebHeaderRequest) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetDomain sets the value of Domain.
func (s *WebHeaderRequest) SetDomain(val NilString) {
	s.Domain = val
}

// SetName sets the value of Name.
func (s *WebHeaderRequest) SetName(val string) {
	s.Name = val
}

// SetPath sets the value of Path.
func (s *WebHeaderRequest) SetPath(val string) {
	s.Path = val
}

// SetValue sets the value of Value.
func (s *WebHeaderRequest) SetValue(val OptNilString) {
	s.Value = val
}

// Ref: #/components/schemas/WebHeaderRequest
type WebHeaderRequestMultipart struct {
	// Name of a hosting account, e.g. 'isabell'.
	Asteroid string       `json:"asteroid"`
	Domain   NilString    `json:"domain"`
	Name     string       `json:"name"`
	Path     string       `json:"path"`
	Value    OptNilString `json:"value"`
}

// GetAsteroid returns the value of Asteroid.
func (s *WebHeaderRequestMultipart) GetAsteroid() string {
	return s.Asteroid
}

// GetDomain returns the value of Domain.
func (s *WebHeaderRequestMultipart) GetDomain() NilString {
	return s.Domain
}

// GetName returns the value of Name.
func (s *WebHeaderRequestMultipart) GetName() string {
	return s.Name
}

// GetPath returns the value of Path.
func (s *WebHeaderRequestMultipart) GetPath() string {
	return s.Path
}

// GetValue returns the value of Value.
func (s *WebHeaderRequestMultipart) GetValue() OptNilString {
	return s.Value
}

// SetAsteroid sets the value of Asteroid.
func (s *WebHeaderRequestMultipart) SetAsteroid(val string) {
	s.Asteroid = val
}

// SetDomain sets the value of Domain.
func (s *WebHeaderRequestMultipart) SetDomain(val NilString) {
	s.Domain = val
}

// SetName sets the value of Name.
func (s *WebHeaderRequestMultipart) SetName(val string) {
	s.Name = val
}

// SetPath sets the value of Path.
func (s *WebHeaderRequestMultipart) SetPath(val string) {
	s.Path = val
}

// SetValue sets the value of Value.
func (s *WebHeaderRequestMultipart) SetValue(val OptNilString) {
	s.Value = val
}

func (*WebHeaderRequestMultipart) createAsteroidsWebdomainsHeadersReq() {}
